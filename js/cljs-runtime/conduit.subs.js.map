{"version":3,"file":"conduit.subs.js","sources":["conduit/subs.cljs"],"mappings":";;;AAGA,2BAAA,3BAAM0B,8DAAaC,EAAEC;AAArB,AAAA;AAEE,OAACG,kBAAQH,EAAED;;AAEb,IAAA1B,iBAAA;IAAAC,iBAEC;kBAAKF,GAAGQ;AAAR,AACE,OAAA,gGAAcR;;;AAHjB,AAAA,2GAAAC,eAAAC,kDAAAD,eAAAC,1LAACC,sDAAAA,qFAAAA;AAKD,IAAA0B,iBAAA;IAAAC,iBAEC;kBAAK9B,GAAGQ;AACN,IAAMI,WAAS,AAAA,2FAAWZ,1GAD5B;AACE,uIAEO,AAACiB,eADDL,tJAEA,uDAAA,hDAACoB,uGAAeN;;;AAN1B,AAAA,2GAAAG,eAAAC,kDAAAD,eAAAC,1LAAC3B,sDAAAA,qFAAAA;AAQD,IAAAG,iBAAA;IAAAC,iBAEC;kBAAKP,GAAGQ;AAAR,AACE,OAAA,uGAAiBR;;;AAHpB,AAAA,2GAAAM,eAAAC,kDAAAD,eAAAC,1LAACJ,sDAAAA,qFAAAA;AAKD,IAAAqB,iBAAA;qBAEC,jBAFDC;kBAEMzB,GAAGQ;AAAR,AACE,IAAMW,iBAAe,AAAA,wGAAiBnB;AACpC,yDAAA,mFAAA,rIAACkB,+CAAOlB,mJAAcmB,zMADxB;;;AAHH,AAAA,2GAAAK,eAAAC,kDAAAD,eAAAC,1LAACtB,sDAAAA,qFAAAA;AAMD,IAAAU,iBAAA;IAAAC,iBAEC;kBAAKd,GAAGQ;AAAR,AACE,OAAA,mFAAOR;;;AAHV,AAAA,2GAAAa,eAAAC,kDAAAD,eAAAC,1LAACX,sDAAAA,qFAAAA;AAKD,IAAAY,iBAAA;IAAAC,iBAEC;kBAAKhB,GAAGQ;AACN,IAAMC,WAAS,AAAA,2FAAWT,1GAD5B;AACE,sJACOS,fACA,AAACQ,vIACD,uDAAA,hDAACe,uGAAeN;;;AAN1B,AAAA,2GAAAX,eAAAC,kDAAAD,eAAAC,1LAACb,sDAAAA,qFAAAA;AAQD,IAAAiB,iBAAA;qBAEC,jBAFDC;kBAEMrB,GAAGQ;AAAR,AACE,OAAA,yFAAUR;;;AAHb,AAAA,2GAAAoB,eAAAC,kDAAAD,eAAAC,1LAAClB,sDAAAA,qFAAAA;AAKD,IAAA8B,iBAAA;qBAEC,jBAFDC;kBAEMlC,GAAGQ;AAAR,AACE,OAAA,yFAAUR;;;AAHb,AAAA,2GAAAiC,eAAAC,kDAAAD,eAAAC,1LAAC/B,sDAAAA,qFAAAA;AAKD,IAAAO,iBAAA;IAAAC,iBAEC;kBAAKX,GAAGQ;AAAR,AACE,OAAA,uFAASR;;;AAHZ,AAAA,2GAAAU,eAAAC,kDAAAD,eAAAC,1LAACR,sDAAAA,qFAAAA;AAKD,IAAAC,iBAAA;IAAAC,iBAEC;kBAAKL,GAAGQ;AACN,OAAA,uFAASR,9FADX;;;AAFD,AAAA,2GAAAI,eAAAC,kDAAAD,eAAAC,1LAACF,sDAAAA,qFAAAA;AAKD,IAAAmB,iBAAA;IAAAC,iBAEC;kBAAKvB,GAAGQ;AAAR,AACE,OAAA,mFAAOR;;;AAHV,AAAA,2GAAAsB,eAAAC,kDAAAD,eAAAC,1LAACpB,sDAAAA,qFAAAA","names":["db","G__42151","G__42152","re-frame.core/reg-sub","G__42202","G__42203","G__42159","G__42160","_","comments","G__42193","G__42194","articles","G__42170","G__42171","G__42176","G__42177","cljs.core/vals","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","active-article","G__42180","G__42181","G__42209","G__42210","G__42163","G__42164","conduit.subs/reverse-cmp","a","b","G__42155","G__42156","cljs.core/compare","cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3","G__42187","G__42188"],"sourcesContent":["(ns conduit.subs\n  (:require [re-frame.core :refer [reg-sub subscribe]]))\n\n(defn reverse-cmp [a b] ;; https://clojure.org/guides/comparators\n  \"Sort numbers in decreasing order, i.e.: calls compare with the arguments in the opposite order\"\n  (compare b a))\n\n(reg-sub\n :active-page           ;; usage: (subscribe [:showing])\n (fn [db _]             ;; db is the (map) value stored in the app-db atom\n   (:active-page db)))  ;; extract a value from the application state\n\n(reg-sub\n :articles  ;; usage: (subscribe [:articles])\n (fn [db _]\n   (let [articles (:articles db)]\n     (->> articles\n          (vals)                            ;; get values from (:articles db)\n          (sort-by :epoch reverse-cmp)))))  ;; sort-by epoch in reverse order\n\n(reg-sub\n :articles-count  ;; usage: (subscribe [:articles])\n (fn [db _]\n   (:articles-count db)))\n\n(reg-sub\n :active-article  ;; usage (subscribe [:active-article])\n (fn [db _]\n   (let [active-article (:active-article db)]\n     (get-in db [:articles active-article]))))\n\n(reg-sub\n :tags  ;; usage: (subscribe [:tags])\n (fn [db _]\n   (:tags db)))\n\n(reg-sub\n :comments  ;; usage: (subscribe [:comments])\n (fn [db _]\n   (let [comments (:comments db)]\n     (->> comments\n          (vals)\n          (sort-by :epoch reverse-cmp)))))\n\n(reg-sub\n :profile  ;; usage: (subscribe [:profile])\n (fn [db _]\n   (:profile db)))\n\n(reg-sub\n :loading  ;; usage: (subscribe [:loading])\n (fn [db _]\n   (:loading db)))\n\n(reg-sub\n :filter  ;; usage: (subscribe [:filter])\n (fn [db _]\n   (:filter db)))\n\n(reg-sub\n :errors  ;; usage: (subscribe [:errors])\n (fn [db _]\n   (:errors db)))\n\n(reg-sub\n :user  ;; usage: (subscribe [:user])\n (fn [db _]\n   (:user db)))\n"]}