{"version":3,"file":"conduit.views.js","sources":["conduit/views.cljs"],"mappings":"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","names":["conduit.views/header","description","conduit.views/footer","loading","G__42446","re-frame.core/subscribe","cljs.core/not","favorited","slug","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","comment","cljs.core/assoc","p1__42433#","offset","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","filter","active-article","active-page","profile","cljs.core/deref","p1__42401#","p1__42402#","p1__42403#","p1__42404#","p1__42405#","errors","G__42410","conduit.views/errors-list","default","tags","G__42308","p1__42336#","p1__42337#","p1__42338#","email","cljs.core.get.cljs$core$IFn$_invoke$arity$2","credentials","conduit.views/format-date","createdAt","title","author","favoritesCount","tagList","cljs.core/empty?","articles","id","G__42309","favorites-count","user-update","p1__42379#","p__42271","map__42272","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","conduit.views/articles-preview","event","G__42275","conduit.views/settings","body","user","G__42262","G__42299","clojure.string/trim","or__3922__auto__","content","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","iter__4292__auto__","s__42454","cljs.core/LazySeq","temp__5457__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4290__auto__","size__4291__auto__","cljs.core/count","b__42456","cljs.core/chunk-buffer","i__42455","map__42457","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__42453","cljs.core/chunk-rest","map__42460","cljs.core/first","cljs.core/cons","cljs.core/rest","comments","G__42440","G__42334","re-frame.core/dispatch","clojure.string.split.cljs$core$IFn$_invoke$arity$2","conduit.views/register","G__42312","conduit.views/login-user","p1__42350#","conduit.views/register-user","registration","G__42366","s__42283","b__42285","i__42284","vec__42286","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__42289","iter__42282","vec__42292","vec__42295","key","val","G__42445","conduit.views/update-user","update","G__42301","params","conduit.views/pages","page-name","G__42467","cljs.core/Keyword","conduit.views/article","conduit.views/article-meta","conduit.views/profile","G__42469","p1__42380#","G__42374","tag","G__42266","p1__42434#","conduit.views/post-comment","conduit.views/upsert-article","G__42395","created-at","conduit.views/home","G__42376","p1__42353#","conduit.views/login","conduit.views/articles-list","G__42355","password","G__42264","G__42367","conduit.views/conduit-app","articles-count","G__42311","G__42370","p1__42352#","G__42356","G__42459","G__42465","article","G__42365","G__42340","p1__42383#","p1__42381#","p1__42305#","conduit.views/get-articles","conduit.views/editor","conduit.views/tags-list","s__42278","b__42280","i__42279","iter__42277","s__42318","b__42320","i__42319","p1__42306#","iter__42317","G__42310","G__42368","G__42300","G__42263","G__42435","conduit.views/logout-user","conduit.views/get-feed-articles","G__42302","p__42258","map__42259","tags-list","cljs.core/reset!","p1__42304#","G__42307","G__42431","p1__42382#","G__42261","p1__42378#","G__42339","map__42385","p1__42384#","bio","image","username","G__42386","G__42276","G__42389","js/Date","date","loading-articles","s__42249","b__42251","i__42250","iter__42248","G__42444","G__42265","p1__42303#","cljs.core/chunk-first","s__42314","cljs.core/name","p1__42351#","G__42408","map__42407","b__42316","i__42315","iter__42313","cljs.core.range.cljs$core$IFn$_invoke$arity$1","G__42369","G__42347"],"sourcesContent":["(ns conduit.views\n  (:require [reagent.core  :as reagent]\n            [re-frame.core :refer [subscribe dispatch]]\n            [clojure.string :as str :refer [trim split]]))\n\n;; -- Helpers -----------------------------------------------------------------\n;;\n(defn format-date\n  [date]\n  (.toDateString (js/Date. date)))\n\n(defn tags-list\n  [tags-list]\n  [:ul.tag-list\n   (for [tag tags-list]\n     ^{:key tag} [:li.tag-default.tag-pill.tag-outline tag])])\n\n(defn article-meta\n  [{author          :author\n    created-at      :createdAt\n    favorites-count :favoritesCount\n    favorited       :favorited\n    slug            :slug}]\n  (let [loading @(subscribe [:loading])\n        user @(subscribe [:user])\n        profile @(subscribe [:profile])]\n    [:div.article-meta\n     [:a {:href (str \"#/@\" (:username author))}\n      [:img {:src (:image author)}]]\n     \" \"\n     [:div.info\n      [:a.author {:href (str \"#/@\" (:username author))} (:username author)]\n      [:span.date (format-date created-at)]]\n     (if (= (:username user) (:username author))\n       [:span\n        [:a.btn.btn-sm.btn-outline-secondary {:href (str \"#/editor/\" slug)}\n         [:i.ion-edit]\n         [:span \" Edit Article \"]]\n        \" \"\n        [:a.btn.btn-outline-danger.btn-sm {:href \"#/\"\n                                           :on-click #(dispatch [:delete-article slug])}\n         [:i.ion-trash-a]\n         [:span \" Delete Article \"]]]\n       (when-not (empty? user)\n         [:span\n          [:button.btn.btn-sm.action-btn.btn-outline-secondary {:on-click #(dispatch [:toggle-follow-user (:username profile)])\n                                                                :class (when (:toggle-follow-user loading) \"disabled\")}\n           [:i {:class (if (:following profile) \"ion-minus-round\" \"ion-plus-round\")}]\n           [:span (if (:following profile) (str \" Unfollow \" (:username profile)) (str \" Follow \" (:username profile)))]]\n          \" \"\n          [:button.btn.btn-sm.btn-primary {:on-click #(dispatch [:toggle-favorite-article slug])\n                                           :class (cond\n                                                    (not favorited) \"btn-outline-primary\"\n                                                    (:toggle-favorite-article loading) \"disabled\")}\n           [:i.ion-heart]\n           [:span (if favorited \" Unfavorite Post \" \" Favorite Post \")]\n           [:span.counter \"(\" favorites-count \")\"]]]))]))\n\n(defn articles-preview\n  [{:keys [description slug createdAt title author favoritesCount favorited tagList]}]\n  (let [loading @(subscribe [:loading])]\n    [:div.article-preview\n     [:div.article-meta\n      [:a {:href (str \"#/@\" (:username author))}\n       [:img {:src (:image author)}]]\n      [:div.info\n       [:a.author {:href (str \"#/@\" (:username author))} (:username author)]\n       [:span.date (format-date createdAt)]]\n      [:button.btn.btn-primary.btn-sm.pull-xs-right {:on-click #(dispatch [:toggle-favorite-article slug])\n                                                     :class (cond\n                                                              (not favorited) \"btn-outline-primary\"\n                                                              (:toggle-favorite-article loading) \"disabled\")}\n       [:i.ion-heart \" \"]\n       [:span favoritesCount]]]\n     [:a.preview-link {:href (str \"#/article/\" slug)}\n      [:h1 title]\n      [:p description]\n      [:span \"Read more ...\"]\n      [tags-list tagList]]])) ;; defined in Helpers section\n\n(defn articles-list\n  [articles loading-articles]\n  [:div\n   (if loading-articles\n     [:div.article-preview\n      [:p \"Loading articles ...\"]]\n     (if (empty? articles)\n       [:div.article-preview\n        [:p \"No articles are here... yet.\"]]\n       (for [article articles]\n         ^{:key (:slug article)} [articles-preview article])))])\n\n(defn errors-list\n  [errors]\n  [:ul.error-messages\n   (for [[key [val]] errors]\n     ^{:key key} [:li (str (name key) \" \" val)])])\n\n;; -- Header ------------------------------------------------------------------\n;;\n(defn header\n  []\n  (let [user @(subscribe [:user])\n        active-page @(subscribe [:active-page])]\n    [:nav.navbar.navbar-light\n     [:div.container\n      [:a.navbar-brand {:href \"#/\"} \"conduit\"]\n      (if (empty? user)\n        [:ul.nav.navbar-nav.pull-xs-right\n         [:li.nav-item\n          [:a.nav-link {:href \"#/\" :class (when (= active-page :home) \"active\")} \"Home\"]]\n         [:li.nav-item\n          [:a.nav-link {:href \"#/login\" :class (when (= active-page :login) \"active\")} \"Sign in\"]]\n         [:li.nav-item\n          [:a.nav-link {:href \"#/register\" :class (when (= active-page :register) \"active\")} \"Sign up\"]]]\n        [:ul.nav.navbar-nav.pull-xs-right\n         [:li.nav-item\n          [:a.nav-link {:href \"#/\" :class (when (= active-page :home) \"active\")} \"Home\"]]\n         [:li.nav-item\n          [:a.nav-link {:href \"#/editor\" :class (when (= active-page :editor) \"active\")}\n           [:i.ion-compose \"New Article\"]]]\n         [:li.nav-item\n          [:a.nav-link {:href \"#/settings\" :class (when (= active-page :settings) \"active\")}\n           [:i.ion-gear-a \"Settings\"]]]\n         [:li.nav-item\n          [:a.nav-link {:href (str \"#/@\" (:username user)) :class (when (= active-page :profile) \"active\")} (:username user)\n           [:img.user-pic {:src (:image user)}]]]])]]))\n\n;; -- Footer ------------------------------------------------------------------\n;;\n(defn footer\n  []\n  [:footer\n   [:div.container\n    [:a.logo-font {:href \"#/\"} \"conduit\"]\n    [:span.attribution\n     \"An interactive learning project from \"\n     [:a {:href \"https://thinkster.io\"} \"Thinkster\"]\n     \". Code & design licensed under MIT.\"]]])\n\n;; -- Home --------------------------------------------------------------------\n;;\n(defn get-articles [event params]\n  (.preventDefault event)\n  (dispatch [:get-articles params]))\n\n(defn get-feed-articles [event params]\n  (.preventDefault event)\n  (dispatch [:get-feed-articles params]))\n\n(defn home\n  []\n  (let [filter @(subscribe [:filter])\n        tags @(subscribe [:tags])\n        loading @(subscribe [:loading])\n        articles @(subscribe [:articles])\n        articles-count @(subscribe [:articles-count])\n        user @(subscribe [:user])]\n    [:div.home-page\n     (when (empty? user)\n       [:div.banner\n        [:div.container\n         [:h1.logo-font \"conduit\"]\n         [:p \"A place to share your knowledge.\"]]])\n     [:div.container.page\n      [:div.row\n       [:div.col-md-9\n        [:div.feed-toggle\n         [:ul.nav.nav-pills.outline-active\n          (when-not (empty? user)\n            [:li.nav-item\n             [:a.nav-link {:href \"\"\n                           :class (when (:feed filter) \"active\")\n                           :on-click #(get-feed-articles % {:offset 0 :limit 10})} \"Your Feed\"]])\n          [:li.nav-item\n           [:a.nav-link {:href \"\"\n                         :class (when-not (or (:tag filter) (:feed filter)) \"active\")\n                         :on-click #(get-articles % {:offset 0 :limit 10})} \"Global Feed\"]] ;; first argument: % is browser event, second: map of filter params\n          (when (:tag filter)\n            [:li.nav-item\n             [:a.nav-link.active\n              [:i.ion-pound] (str \" \" (:tag filter))]])]]\n        [articles-list articles (:articles loading)]\n        (when-not (or (:articles loading) (< articles-count 10))\n          [:ul.pagination\n           (for [offset (range (/ articles-count 10))]\n             ^{:key offset} [:li.page-item {:class (when (= (* offset 10) (:offset filter)) \"active\")\n                                            :on-click #(get-articles % (if (:tag filter)\n                                                                         {:offset (* offset 10) :tag (:tag filter) :limit 10}\n                                                                         {:offset (* offset 10) :limit 10}))}\n                             [:a.page-link {:href \"\"} (+ 1 offset)]])])]\n\n       [:div.col-md-3\n        [:div.sidebar\n         [:p \"Popular Tags\"]\n         (if (:tags loading)\n           [:p \"Loading tags ...\"]\n           [:div.tag-list\n            (for [tag tags]\n              ^{:key tag} [:a.tag-pill.tag-default {:href \"\"\n                                                    :on-click #(get-articles % {:tag tag :limit 10 :offset 0})} tag])])]]]]]))\n\n;; -- Login -------------------------------------------------------------------\n;;\n(defn login-user [event credentials]\n  (.preventDefault event)\n  (dispatch [:login credentials]))\n\n(defn login\n  []\n  (let [default {:email \"\" :password \"\"}\n        credentials (reagent/atom default)]\n    (fn []\n      (let [email (get @credentials :email)\n            password (get @credentials :password)\n            errors @(subscribe [:errors])\n            loading @(subscribe [:loading])]\n        [:div.auth-page\n         [:div.container.page\n          [:div.row\n           [:div.col-md-6.offset-md-3.col-xs-12\n            [:h1.text-xs-center \"Sign in\"]\n            [:p.text-xs-center\n             [:a {:href \"#/register\"} \"Need an account?\"]]\n            (when (:login errors)\n              [errors-list (:login errors)])\n            [:form {:on-submit #(login-user % @credentials)}\n             [:fieldset.form-group\n              [:input.form-control.form-control-lg {:type \"text\"\n                                                    :placeholder \"Email\"\n                                                    :value email\n                                                    :on-change #(swap! credentials assoc :email (-> % .-target .-value))\n                                                    :disabled (when (:login loading))}]]\n\n             [:fieldset.form-group\n              [:input.form-control.form-control-lg {:type \"password\"\n                                                    :placeholder \"Password\"\n                                                    :value password\n                                                    :on-change #(swap! credentials assoc :password (-> % .-target .-value))\n                                                    :disabled (when (:login loading))}]]\n             [:button.btn.btn-lg.btn-primary.pull-xs-right {:class (when (:login loading) \"disabled\")} \"Sign in\"]]]]]]))))\n\n;; -- Register ----------------------------------------------------------------\n;;\n(defn register-user [event registration]\n  (.preventDefault event)\n  (dispatch [:register-user registration]))\n\n(defn register\n  []\n  (let [default {:username \"\" :email \"\" :password \"\"}\n        registration (reagent/atom default)]\n    (fn []\n      (let [username (get @registration :username)\n            email (get @registration :email)\n            password (get @registration :password)\n            loading @(subscribe [:loading])\n            errors @(subscribe [:errors])]\n        [:div.auth-page\n         [:div.container.page\n          [:div.row\n           [:div.col-md-6.offset-md-3.col-xs-12\n            [:h1.text-xs-center \"Sign up\"]\n            [:p.text-xs-center\n             [:a {:href \"#/login\"} \"Have an account?\"]]\n            (when (:register-user errors)\n              [errors-list (:register-user errors)])\n            [:form {:on-submit #(register-user % @registration)}\n             [:fieldset.form-group\n              [:input.form-control.form-control-lg {:type \"text\"\n                                                    :placeholder \"Your Name\"\n                                                    :value username\n                                                    :on-change #(swap! registration assoc :username (-> % .-target .-value))\n                                                    :disabled (when (:register-user loading))}]]\n             [:fieldset.form-group\n              [:input.form-control.form-control-lg {:type \"text\"\n                                                    :placeholder \"Email\"\n                                                    :value email\n                                                    :on-change #(swap! registration assoc :email (-> % .-target .-value))\n                                                    :disabled (when (:register-user loading))}]]\n             [:fieldset.form-group\n              [:input.form-control.form-control-lg {:type \"password\"\n                                                    :placeholder \"Password\"\n                                                    :value password\n                                                    :on-change #(swap! registration assoc :password (-> % .-target .-value))\n                                                    :disabled (when (:register-user loading))}]]\n             [:button.btn.btn-lg.btn-primary.pull-xs-right {:class (when (:register-user loading) \"disabled\")} \"Sign up\"]]]]]]))))\n\n;; -- Profile -----------------------------------------------------------------\n;;\n(defn profile\n  []\n  (let [profile @(subscribe [:profile])\n        filter @(subscribe [:filter])\n        loading @(subscribe [:loading])\n        articles @(subscribe [:articles])\n        user @(subscribe [:user])]\n    [:div.profile-page\n     [:div.user-info\n      [:div.container\n       [:div.row\n        [:div.col-xs-12.col-md-10.offset-md-1\n         [:img.user-img {:src (:image profile)}]\n         [:h4 (:username profile)]\n         [:p (:bio profile)]\n         (if (= (:username user) (:username profile))\n           [:a.btn.btn-sm.btn-outline-secondary.action-btn {:href \"#/settings\"}\n            [:i.ion-gear-a] \" Edit Profile Settings\"]\n           [:button.btn.btn-sm.action-btn.btn-outline-secondary {:on-click #(dispatch [:toggle-follow-user (:username profile)])\n                                                                 :class (when (:toggle-follow-user loading) \"disabled\")}\n            [:i {:class (if (:following profile) \"ion-minus-round\" \"ion-plus-round\")}]\n            [:span (if (:following profile) (str \" Unfollow \" (:username profile)) (str \" Follow \" (:username profile)))]])]]]]\n     [:div.container\n      [:row\n       [:div.col-xs-12.col-md-10.offset-md-1\n        [:div.articles-toggle\n         [:ul.nav.nav-pills.outline-active\n          [:li.nav-item\n           [:a.nav-link {:href (str \"#/@\" (:username profile)) :class (when (:author filter) \" active\")} \"My Articles\"]]\n          [:li.nav-item\n           [:a.nav-link {:href (str \"#/@\" (:username profile) \"/favorites\") :class (when (:favorites filter) \"nav-link active\")} \"Favorited Articles\"]]]]\n        [articles-list articles (:articles loading)]]]]]))\n\n;; -- Settings ----------------------------------------------------------------\n;;\n(defn logout-user [event]\n  (.preventDefault event)\n  (dispatch [:logout]))\n\n(defn update-user [event update]\n  (.preventDefault event)\n  (dispatch [:update-user update]))\n\n(defn settings\n  []\n  (let [{:keys [bio email image username] :as user} @(subscribe [:user])\n        default {:bio bio :email email :image image :username username}\n        loading @(subscribe [:loading])\n        user-update (reagent/atom default)]\n    [:div.settings-page\n     [:div.container.page\n      [:div.row\n       [:div.col-md-6.offset-md-3.col-xs-12\n        [:h1.text-xs-center \"Your Settings\"]\n        [:form\n         [:fieldset\n          [:fieldset.form-group\n           [:input.form-control {:type \"text\"\n                                 :placeholder \"URL of profile picture\"\n                                 :default-value (:image user)\n                                 :on-change #(swap! user-update assoc :image (-> % .-target .-value))}]]\n          [:fieldset.form-group\n           [:input.form-control.form-control-lg {:type \"text\"\n                                                 :placeholder \"Your Name\"\n                                                 :default-value (:username user)\n                                                 :on-change #(swap! user-update assoc :username (-> % .-target .-value))\n                                                 :disabled (when (:update-user loading))}]]\n          [:fieldset.form-group\n           [:textarea.form-control.form-control-lg {:rows \"8\"\n                                                    :placeholder \"Short bio about you\"\n                                                    :default-value (:bio user)\n                                                    :on-change #(swap! user-update assoc :bio (-> % .-target .-value))\n                                                    :disabled (when (:update-user loading))}]]\n          [:fieldset.form-group\n           [:input.form-control.form-control-lg {:type \"text\"\n                                                 :placeholder \"Email\"\n                                                 :default-value (:email user)\n                                                 :on-change #(swap! user-update assoc :email (-> % .-target .-value))\n                                                 :disabled (when (:update-user loading))}]]\n          [:fieldset.form-group\n           [:input.form-control.form-control-lg {:type \"password\"\n                                                 :placeholder \"Password\"\n                                                 :default-value \"\"\n                                                 :on-change #(swap! user-update assoc :password (-> % .-target .-value))\n                                                 :disabled (when (:update-user loading))}]]\n          [:button.btn.btn-lg.btn-primary.pull-xs-right {:on-click #(update-user % @user-update)\n                                                         :class (when (:update-user loading) \"disabled\")} \"Update Settings\"]]]\n        [:hr]\n        [:button.btn.btn-outline-danger {:on-click #(logout-user %)} \"Or click here to logout.\"]]]]]))\n\n;; -- Editor ------------------------------------------------------------------\n;;\n(defn upsert-article [event content slug]\n  (.preventDefault event)\n  (let [title (trim (or (:title content) \"\"))\n        description (trim (or  (:description content) \"\"))\n        body (trim (or (:body content) \"\"))\n        tagList (split (:tagList content) #\" \")]\n    (dispatch [:upsert-article {:slug slug :article {:title title\n                                                     :description description\n                                                     :body body\n                                                     :tagList tagList}}])))\n\n(defn editor\n  []\n  (let [{:keys [title description body tagList slug] :as active-article} @(subscribe [:active-article])\n        default {:title title :description description :body body :tagList tagList}\n        content (reagent/atom default)]\n    (fn []\n      (let [errors @(subscribe [:errors])]\n        [:div.editor-page\n         [:div.container.page\n          [:div.row\n           [:div.col-md-10.offset-md-1.col-xs-12\n            (when (:upsert-article errors)\n              [errors-list (:upsert-article errors)])\n            [:form\n             [:fieldset\n              [:fieldset.form-group\n               [:input.form-control.form-control-lg {:type \"text\"\n                                                     :placeholder \"Article Title\"\n                                                     :default-value title\n                                                     :on-change #(swap! content assoc :title (-> % .-target .-value))}]]\n              [:fieldset.form-group\n               [:input.form-control {:type \"text\"\n                                     :placeholder \"What's this article about?\"\n                                     :default-value description\n                                     :on-change #(swap! content assoc :description (-> % .-target .-value))}]]\n              [:fieldset.form-group\n               [:textarea.form-control {:rows \"8\"\n                                        :placeholder \"Write your article (in markdown)\"\n                                        :default-value body\n                                        :on-change #(swap! content assoc :body (-> % .-target .-value))}]]\n              [:fieldset.form-group\n               [:input.form-control {:type \"text\"\n                                     :placeholder \"Enter tags\"\n                                     :default-value tagList\n                                     :on-change #(swap! content assoc :tagList (-> % .-target .-value))}]\n               [:div.tag-list]]\n              [:button.btn.btn-lg.btn-primary.pull-xs-right {:on-click #(upsert-article % @content slug)}\n               (if active-article\n                 \"Update Article\"\n                 \"Publish Article\")]]]]]]]))))\n\n;; -- Article -----------------------------------------------------------------\n;;\n(defn post-comment [event comment default]\n  (.preventDefault event)\n  (let [body (get @comment :body)]\n    (dispatch [:post-comment {:body body}])\n    (reset! comment default)))\n\n(defn article\n  []\n  (let [default {:body \"\"}\n        comment (reagent/atom default)]\n    (fn []\n      (let [active-article @(subscribe [:active-article])\n            user @(subscribe [:user])\n            comments @(subscribe [:comments])\n            errors @(subscribe [:errors])\n            loading @(subscribe [:loading])]\n        [:div.article-page\n         [:div.banner\n          [:div.container\n           [:h1 (:title active-article)]\n           [article-meta active-article]]] ;; defined in Helpers section\n         [:div.container.page\n          [:div.row.article-content\n           [:div.col-md-12\n            [:p (:body active-article)]]]\n          [tags-list (:tagList active-article)] ;; defined in Helpers section\n          [:hr]\n          [:div.article-actions\n           [article-meta active-article]] ;; defined in Helpers section\n          [:div.row\n           [:div.col-xs-12.col-md-8.offset-md-2\n            (when (:comments errors)\n              [errors-list (:comments errors)]) ;; defined in Helpers section\n            (if-not (empty? user)\n              [:form.card.comment-form\n               [:div.card-block\n                [:textarea.form-control {:placeholder \"Write a comment...\"\n                                         :rows \"3\"\n                                         :value (:body @comment)\n                                         :on-change #(swap! comment assoc :body (-> % .-target .-value))}]]\n               [:div.card-footer\n                [:img.comment-author-img {:src (:image user)}]\n                [:button.btn.btn-sm.btn-primary {:class (when (:comments loading) \"disabled\")\n                                                 :on-click #(post-comment % comment default)} \"Post Comment\"]]]\n              [:p\n               [:a {:href \"#/register\"} \"Sign up\"]\n               \" or \"\n               [:a {:href \"#/login\"} \"Sign in\"]\n               \" to add comments on this article.\"])\n            (if (:comments loading)\n              [:div\n               [:p \"Loading comments ...\"]]\n              (if (empty? comments)\n                [:div]\n                (for [{:keys [id createdAt body author]} comments]\n                  ^{:key id} [:div.card\n                              [:div.card-block\n                               [:p.card-text body]]\n                              [:div.card-footer\n                               [:a.comment-author {:href (str \"#/@\" (:username author))}\n                                [:img.comment-author-img {:src (:image author)}]]\n                               \" \"\n                               [:a.comment-author {:href (str \"#/@\" (:username author))} (:username author)]\n                               [:span.date-posted (format-date createdAt)]\n                               (when (= (:username user) (:username author))\n                                 [:span.mod-options {:on-click #(dispatch [:delete-comment id])}\n                                  [:i.ion-trash-a]])]])))]]]]))))\n\n(defn pages [page-name]\n  (case page-name\n    :home [home]\n    :login [login]\n    :register [register]\n    :profile [profile]\n    :settings [settings]\n    :editor [editor]\n    :article [article]\n    [home]))\n\n(defn conduit-app\n  []\n  (let [active-page @(subscribe [:active-page])]\n    [:div\n     [header]\n     [pages active-page]\n     [footer]]))\n"]}