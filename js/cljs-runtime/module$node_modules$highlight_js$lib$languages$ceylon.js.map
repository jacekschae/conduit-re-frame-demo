{
"version":3,
"file":"module$node_modules$highlight_js$lib$languages$ceylon.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAwC,CAC1HD,CAAAC,QAAA,CAAiBC,QAAQ,CAACC,CAAD,CAAO,CAc9B,IAAIC,EAAQ,CACVC,UAAW,OADD,CACUC,aAAc,CAAA,CADxB,CAC8BC,WAAY,CAAA,CAD1C,CAEVC,MAAO,IAFG,CAEGC,IAAK,IAFR,CAGVC,SAdAC,gRAWU,CAIVC,UAAW,EAJD,CAAZ,CAMIC,EAAc,CAChB,CAEER,UAAW,QAFb;AAGEG,MAAO,KAHT,CAIEC,IAAK,KAJP,CAKEG,UAAW,EALb,CADgB,CAQhB,CAEEP,UAAW,QAFb,CAGEG,MAAO,GAHT,CAGcC,IAAK,GAHnB,CAIEK,SAAU,CAACV,CAAD,CAJZ,CARgB,CAchB,CAEEC,UAAW,QAFb,CAGEG,MAAO,GAHT,CAIEC,IAAK,GAJP,CAdgB,CAoBhB,CAEEJ,UAAW,QAFb,CAGEG,MAAO,+EAHT,CAIEI,UAAW,CAJb,CApBgB,CA2BlBR,EAAAU,SAAA,CAAiBD,CAEjB,OAAO,CACLH,SAAU,CACRK,QAAS,oYADD;AAERC,KAvCFC,kCAqCU,CADL,CAKLC,QAAS,wBALJ,CAMLJ,SAAU,CACRX,CAAAgB,oBADQ,CAERhB,CAAAiB,QAAA,CAAa,MAAb,CAAqB,MAArB,CAA6B,CAACN,SAAU,CAAC,MAAD,CAAX,CAA7B,CAFQ,CAGR,CAEET,UAAW,MAFb,CAGEG,MAAO,2BAHT,CAHQ,CAAAa,OAAA,CAQDR,CARC,CANL,CAjDuB,CAD0F;",
"sources":["node_modules/highlight.js/lib/languages/ceylon.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_js$lib$languages$ceylon\"] = function(global,process,require,module,exports) {\nmodule.exports = function(hljs) {\n  // 2.3. Identifiers and keywords\n  var KEYWORDS =\n    'assembly module package import alias class interface object given value ' +\n    'assign void function new of extends satisfies abstracts in out return ' +\n    'break continue throw assert dynamic if else switch case for while try ' +\n    'catch finally then let this outer super is exists nonempty';\n  // 7.4.1 Declaration Modifiers\n  var DECLARATION_MODIFIERS =\n    'shared abstract formal default actual variable late native deprecated' +\n    'final sealed annotation suppressWarnings small';\n  // 7.4.2 Documentation\n  var DOCUMENTATION =\n    'doc by license see throws tagged';\n  var SUBST = {\n    className: 'subst', excludeBegin: true, excludeEnd: true,\n    begin: /``/, end: /``/,\n    keywords: KEYWORDS,\n    relevance: 10\n  };\n  var EXPRESSIONS = [\n    {\n      // verbatim string\n      className: 'string',\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      relevance: 10\n    },\n    {\n      // string literal or template\n      className: 'string',\n      begin: '\"', end: '\"',\n      contains: [SUBST]\n    },\n    {\n      // character literal\n      className: 'string',\n      begin: \"'\",\n      end: \"'\"\n    },\n    {\n      // numeric literal\n      className: 'number',\n      begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\n      relevance: 0\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  return {\n    keywords: {\n      keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,\n      meta: DOCUMENTATION\n    },\n    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {contains: ['self']}),\n      {\n        // compiler annotation\n        className: 'meta',\n        begin: '@[a-z]\\\\w*(?:\\\\:\\\"[^\\\"]*\\\")?'\n      }\n    ].concat(EXPRESSIONS)\n  };\n};\n};"],
"names":["shadow$provide","global","process","require","module","exports","module.exports","hljs","SUBST","className","excludeBegin","excludeEnd","begin","end","keywords","KEYWORDS","relevance","EXPRESSIONS","contains","keyword","meta","DOCUMENTATION","illegal","C_LINE_COMMENT_MODE","COMMENT","concat"]
}
