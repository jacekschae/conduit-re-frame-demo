{"version":3,"file":"conduit.core.js","sources":["conduit/core.cljs"],"mappings":"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","names":["conduit.core/is-service-worker-supported?","js/navigator.serviceWorker","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","js/location.protocol","conduit.core/register-service-worker","path-to-sw","js/navigator","conduit.core/hook-browser-navigation!","G__28964","goog/History","G__28965","G__28966","G__28967","goog.events/listen","goog.history.EventType/NAVIGATE","event","secretary.core/dispatch!","conduit.core/routes","slug","profile","secretary.core/set-config!","action__26486__auto__","params__26487__auto__","cljs.core/map?","map__28971","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core/vector?","vec__28974","secretary.core/add-route!","G__28973","G__28977","re-frame.core/dispatch","map__28978","vec__28981","G__28980","G__28984","map__28985","vec__28988","G__28987","G__28991","map__28992","vec__28995","G__28994","G__28998","map__28999","vec__29002","G__29001","G__29005","map__29006","cljs.core.get.cljs$core$IFn$_invoke$arity$2","vec__29009","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","G__29008","G__29012","map__29013","vec__29016","G__29015","G__29019","map__29020","vec__29023","G__29022","G__29026","map__29027","vec__29030","G__29029","G__29033","cljs.core.subs.cljs$core$IFn$_invoke$arity$2","map__29034","vec__29037","G__29036","G__29040","conduit.core/main","G__29051","re-frame.core/dispatch-sync","reagent.core.render.cljs$core$IFn$_invoke$arity$2","conduit.views/conduit-app","js/document"],"sourcesContent":["(ns conduit.core\n  (:require-macros [secretary.core :refer [defroute]])\n  (:import goog.History)\n  (:require [secretary.core :as secretary]\n            [goog.events :as gevents]\n            [goog.history.EventType :as EventType]\n            [re-frame.core :refer [dispatch dispatch-sync clear-subscription-cache!]]\n            [reagent.core :as reagent]\n            [conduit.events] ;; These three are only\n            [conduit.subs]   ;; required to make the compiler\n            [conduit.views]))  ;; load them\n\n;; -- Service Worker ----------------------------------------------------------\n;;\n(defn is-service-worker-supported?\n  []\n  (and\n   (exists? js/navigator.serviceWorker)\n   (= js/location.protocol \"https:\")))\n\n(defn register-service-worker\n  [path-to-sw]\n  (when (is-service-worker-supported?)\n    (-> js/navigator\n        .-serviceWorker\n        (.register path-to-sw))))\n\n;; -- Routes and Navigation ---------------------------------------------------\n;;\n(defn hook-browser-navigation! []\n  (doto (History.)\n    (gevents/listen\n     EventType/NAVIGATE\n     (fn [event]\n       (secretary/dispatch! (.-token event))))\n    (.setEnabled true)))\n\n(defn routes\n  []\n  (let [slug nil\n        profile nil]\n    (secretary/set-config! :prefix \"#\")\n    (defroute \"/\" [] (dispatch [:set-active-page {:page :home}]))\n    (defroute \"/login\" [] (dispatch [:set-active-page {:page :login}]))\n    (defroute \"/register\" [] (dispatch [:set-active-page {:page :register}]))\n    (defroute \"/settings\" [] (dispatch [:set-active-page {:page :settings}]))\n    (defroute \"/editor\" [] (dispatch [:set-active-page {:page :editor}]))\n    (defroute \"/editor/:slug\" [slug] (dispatch [:set-active-page {:page :editor :slug slug}]))\n    (defroute \"/logout\" [] (dispatch [:logout]))\n    (defroute \"/article/:slug\" [slug] (dispatch [:set-active-page {:page :article :slug slug}]))\n    (defroute \"/:profile/favorites\" [profile] (dispatch [:set-active-page {:page :favorited :favorited (subs profile 1)}]))\n    (defroute \"/:profile\" [profile] (dispatch [:set-active-page {:page :profile :profile (subs profile 1)}]))\n    (hook-browser-navigation!)))\n\n;; -- Entry Point -------------------------------------------------------------\n;; Within ../../resources/public/index.html you'll see this code:\n;; window.onload = function() { conduit.core.main() }\n;; So this is the entry function that kicks off the app once the HTML is loaded.\n;;\n(defn ^:export main\n  []\n  ;; Hookup the router.\n  (routes)\n\n  ;; Put an initial value into app-db.\n  ;; The event handler for `:initialise-db` can be found in `events.cljs`\n  ;; Using the sync version of dispatch means that value is in\n  ;; place before we go onto the next step.\n  (dispatch-sync [:initialise-db])\n\n  ;; Render the UI into the HTML's <div id=\"app\" /> element\n  ;; The view function `conduit.views/conduit-app` is the\n  ;; root view for the entire UI.\n  (reagent/render [conduit.views/conduit-app]\n    (.getElementById js/document \"app\")))\n\n  ;; Register Service Worker defined at the top\n  ; (register-service-worker \"js/service-worker.js\"))\n"]}