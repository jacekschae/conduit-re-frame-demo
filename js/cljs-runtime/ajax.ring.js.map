{"version":3,"file":"ajax.ring.js","sources":["ajax/ring.cljc"],"mappings":";;;;;AAKA,2BAAA,3BAAMG,8DAAgBe;AACpB,sDAAejB,tDADjB;4GAEa,AAACD,uBAAQC,nIADpB,AAAA,kDAAA,2FAAA,qGAAA,sDAGS,CAACiB,0CAAAA,oDAAAA,ZAAUjB,gCAAAA,nNADR,AAACoB,gCAAiBpB;;;AAGhC,AAAA;;;;;;;;iCAAA,yCAAAM,1EAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC;;;KAAA;AAAA,OAAAA,6DAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,AAAA,+DAAA,/DAAMD;AAAN,AAOM,oEAAA,2CAAA,xGAACU,kKAA8B,AAACC;;;AAPtC,AAAA,+DAAA,WAAAT,1EAAMF;AAAN,AAAA,IAAAG,aAAAD;IAAAC,iBAAA,EAAA,EAAA,EAAA,CAAAA,cAAA,QAAA,EAAA,EAAA,CAAA,AAAAA,iDAAA,WAAA,CAAAC,gCAAA,AAAAD,+BAAA,KAAA,OAAA,QAAA,AAAAE,8CAAAC,mBAAAH,YAAAA;IAAAI,aAAA,AAAAC,4CAAAL,eAAA;IAAAI,iBAAA,EAAA,EAAA,EAAA,CAAAA,cAAA,QAAA,EAAA,EAAA,CAAA,AAAAA,iDAAA,WAAA,CAAAH,gCAAA,AAAAG,+BAAA,KAAA,OAAA,QAAA,AAAAF,8CAAAC,mBAAAC,YAAAA;IAQaZ,OARb,AAAAa,4CAAAD,eAAA;IAQkBX,cARlB,AAAAY,4CAAAD,eAAA;IAQ8BV,eAR9B,AAAAW,4CAAAD,eAAA;AASG,gDAAA,2CAAA,oFAAA,gJAAA,xTAACd,yIAA2B,AAACC,yBAAeC,0EACT,CAAA,oDAAaC,4FACZC,pYAXvC;;;AAAA,AAAA,yDAAA,zDAAMG;;AAAN","names":["ajax.protocols/-status","response","ajax.interceptors/map->ResponseFormat","ajax.ring/make-ring-read","read","description","content-type","var_args","G__41391","ajax.ring/ring-response-format","js/Error","p__41393","map__41394","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","map__41395","cljs.core.get.cljs$core$IFn$_invoke$arity$2","body-read","ajax.ring.ring_response_format.cljs$core$IFn$_invoke$arity$1","ajax.formats.raw_response_format.cljs$core$IFn$_invoke$arity$0","ajax.protocols/-get-all-headers"],"sourcesContent":["(ns ajax.ring\n  (:require [ajax.interceptors :refer [map->ResponseFormat]]\n            [ajax.protocols :refer [-status -get-all-headers -body]]\n            [ajax.formats :as f]))\n\n(defn make-ring-read [body-read]\n  (fn ring-read [response]\n    {:status (-status response)\n     :headers (-get-all-headers response)\n     :body (body-read response)}))\n\n(defn ring-response-format\n  \"Returns a Ring-compatible response map.\n\n   Optionally can be passed a :format option. This should be another\n   response-format map. If format is provided it will be used to\n   specify the content-type, and the read method will be used to\n   populate the :body key in the response map.\"\n  ([] (ring-response-format {:format (f/raw-response-format)}))\n  ([{{:keys [read description content-type]} :format}]\n   (map->ResponseFormat {:read (make-ring-read read)\n                         :description (str \"ring/\" description)\n                         :content-type content-type})))\n"]}