{
"version":3,
"file":"module$node_modules$highlight_js$lib$languages$delphi.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAwC,CAC1HD,CAAAC,QAAA,CAAiBC,QAAQ,CAACC,CAAD,CAAO,CAa9B,IAAIC,EAAgB,CAClBD,CAAAE,oBADkB,CAElBF,CAAAG,QAAA,CAAa,IAAb,CAAmB,IAAnB,CAAyB,CAACC,UAAW,CAAZ,CAAzB,CAFkB,CAGlBJ,CAAAG,QAAA,CAAa,MAAb,CAAqB,MAArB,CAA6B,CAACC,UAAW,EAAZ,CAA7B,CAHkB,CAApB,CAKIC,EAAY,CACdC,UAAW,MADG,CAEdC,SAAU,CACR,CAACC,MAAO,MAAR,CAAgBC,IAAK,IAArB,CADQ,CAER,CAACD,MAAO,QAAR,CAAkBC,IAAK,MAAvB,CAFQ,CAFI,CALhB,CAYIC,EAAS,CACXJ,UAAW,QADA,CAEXE,MAAO,GAFI,CAECC,IAAK,GAFN,CAGXE,SAAU,CAAC,CAACH,MAAO,IAAR,CAAD,CAHC,CAZb,CAiBII,EAAc,CAChBN,UAAW,QADK,CACKE,MAAO,SADZ,CAjBlB,CAoBIK,EAAQ,CACVL,MAAOR,CAAAc,SAAPN,CAAuB,0BADb,CACsCO,YAAa,CAAA,CADnD,CAEVJ,SAAU,CACRX,CAAAgB,WADQ,CAFA,CApBZ,CA0BIC,EAAW,CACbX,UAAW,UADE;AAEbY,cAAe,2CAFF,CAE+CT,IAAK,MAFpD,CAGbU,SAAU,oDAHG,CAIbR,SAAU,CACRX,CAAAgB,WADQ,CAER,CACEV,UAAW,QADb,CAEEE,MAAO,IAFT,CAEeC,IAAK,IAFpB,CAGEU,SA9CJC,06BA2CE;AAIET,SAAU,CAACD,CAAD,CAASE,CAAT,CAAsBP,CAAtB,CAAAgB,OAAA,CAAwCpB,CAAxC,CAJZ,CAFQ,CAQRI,CARQ,CAAAgB,OAAA,CASDpB,CATC,CAJG,CAef,OAAO,CACLqB,QAAS,+CAAA,MAAA,CAAA,GAAA,CADJ,CAELC,iBAAkB,CAAA,CAFb,CAGLJ,SAvDAC,06BAoDK;AAILI,QAAS,0BAJJ,CAKLb,SAAU,CACRD,CADQ,CACAE,CADA,CAERZ,CAAAyB,YAFQ,CAGRZ,CAHQ,CAIRI,CAJQ,CAKRZ,CALQ,CAAAgB,OAAA,CAMDpB,CANC,CALL,CAtDuB,CAD0F;",
"sources":["node_modules/highlight.js/lib/languages/delphi.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_js$lib$languages$delphi\"] = function(global,process,require,module,exports) {\nmodule.exports = function(hljs) {\n  var KEYWORDS =\n    'exports register file shl array record property for mod while set ally label uses raise not ' +\n    'stored class safecall var interface or private static exit index inherited to else stdcall ' +\n    'override shr asm far resourcestring finalization packed virtual out and protected library do ' +\n    'xorwrite goto near function end div overload object unit begin string on inline repeat until ' +\n    'destructor write message program with read initialization except default nil if case cdecl in ' +\n    'downto threadvar of try pascal const external constructor type public then implementation ' +\n    'finally published procedure absolute reintroduce operator as is abstract alias assembler ' +\n    'bitpacked break continue cppdecl cvar enumerator experimental platform deprecated ' +\n    'unimplemented dynamic export far16 forward generic helper implements interrupt iochecks ' +\n    'local name nodefault noreturn nostackframe oldfpccall otherwise saveregisters softfloat ' +\n    'specialize strict unaligned varargs ';\n  var COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(/\\{/, /\\}/, {relevance: 0}),\n    hljs.COMMENT(/\\(\\*/, /\\*\\)/, {relevance: 10})\n  ];\n  var DIRECTIVE = {\n    className: 'meta',\n    variants: [\n      {begin: /\\{\\$/, end: /\\}/},\n      {begin: /\\(\\*\\$/, end: /\\*\\)/}\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    begin: /'/, end: /'/,\n    contains: [{begin: /''/}]\n  };\n  var CHAR_STRING = {\n    className: 'string', begin: /(#\\d+)+/\n  };\n  var CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(', returnBegin: true,\n    contains: [\n      hljs.TITLE_MODE\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure', end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [STRING, CHAR_STRING, DIRECTIVE].concat(COMMENT_MODES)\n      },\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n  return {\n    aliases: ['dpr', 'dfm', 'pas', 'pascal', 'freepascal', 'lazarus', 'lpr', 'lfm'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [\n      STRING, CHAR_STRING,\n      hljs.NUMBER_MODE,\n      CLASS,\n      FUNCTION,\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n};\n};"],
"names":["shadow$provide","global","process","require","module","exports","module.exports","hljs","COMMENT_MODES","C_LINE_COMMENT_MODE","COMMENT","relevance","DIRECTIVE","className","variants","begin","end","STRING","contains","CHAR_STRING","CLASS","IDENT_RE","returnBegin","TITLE_MODE","FUNCTION","beginKeywords","keywords","KEYWORDS","concat","aliases","case_insensitive","illegal","NUMBER_MODE"]
}
