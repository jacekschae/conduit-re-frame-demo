{"version":3,"file":"shadow.cljs.devtools.client.browser.js","sources":["shadow/cljs/devtools/client/browser.cljs"],"mappings":"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","names":["cljs.core/vreset!","shadow.cljs.devtools.client.browser/socket-ref","shadow.cljs.devtools.client.browser/close-reason-ref","shadow.cljs.devtools.client.env/build-id","shadow.cljs.devtools.client.env/autoload","shadow.cljs.devtools.client.browser/do-js-reload","msg","sources","complete-fn","shadow.cljs.devtools.client.browser/devtools-msg","fn-sym","shadow.cljs.devtools.client.browser/load-sources","shadow.cljs.devtools.client.browser.devtools_msg.cljs$core$IFn$_invoke$arity$variadic","resource-name","path","shadow.cljs.devtools.client.env/ssl","shadow.cljs.devtools.client.env/repl-host","shadow.cljs.devtools.client.env/repl-port","shadow.cljs.devtools.client.env/proc-id","js/setTimeout","shadow.cljs.devtools.client.browser/heartbeat!","js/console.error","e","warnings","p__39492","map__39493","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","module","rc","shadow.cljs.devtools.client.hud/hud-error","shadow.cljs.devtools.client.browser/do-js-load","cljs.core/reset!","shadow.cljs.devtools.client.browser/repl-ns-ref","ns","shadow.cljs.devtools.client.browser/ws-msg","id","shadow.cljs.devtools.client.browser/script-eval","require-str","p__39549","map__39550","shadow.cljs.devtools.client.browser/handle-asset-watch","updates","shadow.cljs.devtools.client.browser/module-loaded","name","s","js/document.body.removeChild","node","cljs.core.into.cljs$core$IFn$_invoke$arity$2","goog.userAgent.product/FIREFOX","socket","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","cljs.core/contains?","reload-info","js/document.createElement","goog.dom/insertSiblingAfter","new-link","js-ns","js/Date.now","callback","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","repl-state","or__3922__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","shadow.cljs.devtools.client.browser/goog-base-rc","resource-id","cljs.core/empty?","clojure.string/ends-with?","shadow.cljs.devtools.client.browser/ws-connect","cljs.core/not","cljs.core/some","reload-namespaces","provides","p__39456","map__39457","shadow.cljs.devtools.client.browser/handle-build-complete","info","cljs.core/volatile!","js/console.warn","line","column","shadow.cljs.devtools.client.env/process-ws-msg","shadow.cljs.devtools.client.browser/handle-message","content","js/goog","js/goog.constructNamespace_","src","goog.userAgent.product/IE","code","shadow.cljs.devtools.client.env/files-url","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","shadow.cljs.devtools.client.browser/src-is-loaded?","actions","p__39481","map__39482","shadow.cljs.devtools.client.env/module-format","temp__5457__auto__","cljs.core/deref","shadow.cljs.devtools.client.browser/active-modules-ref","G__39626","shadow.cljs.devtools.client.browser/repl-invoke","shadow.cljs.devtools.client.browser/repl-init","G__39628","G__39629","G__39630","G__39631","G__39632","goog.net.XhrIo/send","cljs.core/-vreset!","cljs.core/-deref","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","warning","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","goog.userAgent.product/CHROME","req","sources-to-load","shadow.cljs.devtools.client.env/ws-url","p__39599","map__39600","js","p__39623","map__39624","type","shadow.cljs.devtools.client.hud/hud-warnings","ws-url","G__39446","G__39447","G__39448","G__39449","G__39450","js/WebSocket","loc","cbp","js/document.createTextNode","shadow.cljs.devtools.client.browser/scripts-to-load","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","shadow.cljs.devtools.client.hud/connection-error","G__39445","cljs.core/Keyword","text","p__39617","map__39618","shadow.cljs.devtools.client.browser/get-asset-root","shadow.cljs.devtools.client.browser/repl-error","result","seq__39473","cljs.core/seq","chunk__39474","count__39475","i__39476","map__39477","cljs.core/chunked-seq?","c__4319__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","map__39479","cljs.core/first","cljs.core/next","w","sources-to-get","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","G__39558","G__39559","cljs.core.rand.cljs$core$IFn$_invoke$arity$0","clojure.string/replace","shadow.cljs.devtools.client.hud/load-end-success","p__39394","map__39395","output-name","seq__39399","chunk__39400","count__39401","i__39402","map__39403","map__39405","temp__5455__auto__","p1__39455#","shadow.cljs.devtools.client.hud/load-end","print-fn","res","iter__4292__auto__","s__39463","cljs.core/LazySeq","xs__6012__auto__","map__39471","iterys__4288__auto__","s__39465","c__4290__auto__","size__4291__auto__","b__39467","cljs.core/chunk-buffer","i__39466","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__39464","cljs.core/cons","cljs.core/rest","fs__4289__auto__","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","iter__39462","p__39489","map__39490","shadow.cljs.devtools.client.env/repl-error","shadow.cljs.devtools.client.browser/compile","seq__39552","chunk__39554","count__39555","i__39556","shadow.cljs.devtools.client.browser/repl-set-ns","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core.map.cljs$core$IFn$_invoke$arity$1","var_args","args__4502__auto__","len__4499__auto__","i__4500__auto__","argseq__4503__auto__","cljs.core/IndexedSeq","seq39348","G__39349","self__4486__auto__","args","goog.dom/removeNode","p__39620","map__39621","shadow.cljs.devtools.client.env.do_js_reload.cljs$core$IFn$_invoke$arity$3","map__39459","compiled","shadow.cljs.devtools.client.browser/goog-is-loaded?","js/goog.Uri","js/CLOSURE_BASE_PATH","js/document.querySelector","shadow.cljs.devtools.client.env/enabled","shadow.cljs.devtools.client.browser/loaded?","js/goog.isProvided_","cljs.core/*print-fn*","js/document.body.appendChild","p__39613","map__39614","cljs.core.distinct.cljs$core$IFn$_invoke$arity$1","js/document.location.href","shadow.cljs.devtools.client.browser/repl-require","shadow.cljs.devtools.client.hud/load-start","shadow.cljs.devtools.client.hud/connection-error-clear!","js-requires","shadow.cljs.devtools.client.hud/hud-hide","shadow.cljs.devtools.client.browser/module-is-active?","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1","js/console","and__3911__auto__","cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1","goog.object/get","js/goog.dependencies_.written","goog.userAgent.product/SAFARI","shadow.cljs.devtools.client.browser/get-ua-product","shadow.cljs.devtools.client.env/repl-call","js/eval","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","shadow.cljs.devtools.client.browser/do-js-requires","p__39606","map__39607","js/window.addEventListener","seq__39419","chunk__39420","count__39421","i__39422"],"sourcesContent":["(ns shadow.cljs.devtools.client.browser\n  (:require\n    [cljs.reader :as reader]\n    [clojure.string :as str]\n    [goog.dom :as gdom]\n    [goog.object :as gobj]\n    [goog.net.jsloader :as loader]\n    [goog.userAgent.product :as product]\n    [goog.Uri]\n    [goog.net.XhrIo :as xhr]\n    [shadow.cljs.devtools.client.env :as env]\n    [shadow.cljs.devtools.client.console]\n    [shadow.cljs.devtools.client.hud :as hud]\n    ))\n\n(defonce active-modules-ref\n  (volatile! #{}))\n\n(defonce repl-ns-ref (atom nil))\n\n(defn module-loaded [name]\n  (vswap! active-modules-ref conj (keyword name)))\n\n(defonce socket-ref (volatile! nil))\n\n(defn devtools-msg [msg & args]\n  (.apply (.-log js/console) nil (into-array (into [(str \"%cshadow-cljs: \" msg) \"color: blue;\"] args))))\n\n(defn ws-msg [msg]\n  (if-let [s @socket-ref]\n    (.send s (pr-str msg))\n    (js/console.warn \"WEBSOCKET NOT CONNECTED\" (pr-str msg))))\n\n(defonce scripts-to-load (atom []))\n\n(def loaded? js/goog.isProvided_)\n\n(defn goog-is-loaded? [name]\n  (gobj/get js/goog.dependencies_.written name))\n\n(def goog-base-rc\n  [:shadow.build.classpath/resource \"goog/base.js\"])\n\n(defn src-is-loaded? [{:keys [resource-id output-name] :as src}]\n  ;; FIXME: don't like this special case handling, but goog/base.js will always be loaded\n  ;; but not as a separate file\n  (or (= goog-base-rc resource-id)\n      (goog-is-loaded? output-name)))\n\n(defn module-is-active? [module]\n  (contains? @active-modules-ref module))\n\n(defn script-eval\n  \"js/eval doesn't get optimized properly, this hack seems to do the trick\"\n  [code]\n  (let [node (js/document.createElement \"script\")]\n    (.appendChild node (js/document.createTextNode code))\n    (js/document.body.appendChild node)\n    (js/document.body.removeChild node)))\n\n(defn do-js-load [sources]\n  (doseq [{:keys [resource-id resource-name js] :as src} sources]\n    (devtools-msg \"load JS\" resource-name)\n    (script-eval (str js \"\\n//# sourceURL=\" resource-name))))\n\n(defn do-js-reload [msg sources complete-fn]\n  (env/do-js-reload\n    (assoc msg\n      :log-missing-fn\n      (fn [fn-sym]\n        (devtools-msg (str \"can't find fn \" fn-sym)))\n      :log-call-async\n      (fn [fn-sym]\n        (devtools-msg (str \"call async \" fn-sym)))\n      :log-call\n      (fn [fn-sym]\n        (devtools-msg (str \"call \" fn-sym))))\n    #(do-js-load sources)\n    complete-fn))\n\n(defn do-js-requires\n  \"when (require '[\\\"some-str\\\" :as x]) is done at the REPL we need to manually call the shadow.js.require for it\n   since the file only adds the shadow$provide. only need to do this for shadow-js.\"\n  [js-requires]\n  (doseq [js-ns js-requires]\n    (let [require-str (str \"var \" js-ns \" = shadow.js.require(\\\"\" js-ns \"\\\");\")]\n      (script-eval require-str))))\n\n(defn load-sources [sources callback]\n  (if (empty? sources)\n    (callback [])\n    (xhr/send\n      (env/files-url)\n      (fn [res]\n        (this-as ^goog req\n          (let [content\n                (-> req\n                    (.getResponseText)\n                    (reader/read-string))]\n            (callback content)\n            )))\n      \"POST\"\n      (pr-str {:client :browser\n               :sources (into [] (map :resource-id) sources)})\n      #js {\"content-type\" \"application/edn; charset=utf-8\"})))\n\n(defn handle-build-complete [{:keys [info reload-info] :as msg}]\n  (let [{:keys [sources compiled]}\n        info\n\n        warnings\n        (->> (for [{:keys [resource-name warnings] :as src} sources\n                   :when (not (:from-jar src))\n                   warning warnings]\n               (assoc warning :resource-name resource-name))\n             (distinct)\n             (into []))]\n\n    (doseq [{:keys [msg line column resource-name] :as w} warnings]\n      (js/console.warn (str \"BUILD-WARNING in \" resource-name \" at [\" line \":\" column \"]\\n\\t\" msg)))\n\n    (if-not env/autoload\n      (hud/load-end-success)\n      ;; load all files for current build:\n      ;; of modules that are active\n      ;; and are either not loaded yet\n      ;; or specifically marked for reload\n      (let [sources-to-get\n            (->> sources\n                 (filter\n                   (fn [{:keys [module] :as rc}]\n                     (or (= \"js\" env/module-format)\n                         (module-is-active? module))))\n                 ;; don't reload namespaces that have ^:dev/never-reload meta\n                 (remove (fn [{:keys [ns]}]\n                           (contains? (:never-load reload-info) ns)))\n                 (filter\n                   (fn [{:keys [ns resource-id] :as src}]\n                     (or (contains? (:always-load reload-info) ns)\n                         (not (src-is-loaded? src))\n                         (and (contains? compiled resource-id)\n                              ;; never reload files from jar\n                              ;; they can't be hot-swapped so the only way they get re-compiled\n                              ;; is if they have warnings, which we can't to anything about\n                              (not (:from-jar src))))))\n                 (into []))]\n\n\n        ;; FIXME: should allow reload with warnings\n        (when (and (empty? warnings)\n                   (seq sources-to-get))\n          (load-sources sources-to-get #(do-js-reload msg % hud/load-end-success))\n          )))))\n\n(defn handle-asset-watch [{:keys [updates] :as msg}]\n  (doseq [path updates\n          ;; FIXME: could support images?\n          :when (str/ends-with? path \"css\")]\n    (when-let [node (js/document.querySelector (str \"link[href^=\\\"\" path \"\\\"]\"))]\n      (let [new-link\n            (doto (js/document.createElement \"link\")\n              (.setAttribute \"rel\" \"stylesheet\")\n              (.setAttribute \"href\" (str path \"?r=\" (rand))))]\n\n        (devtools-msg \"load CSS\" path)\n        (gdom/insertSiblingAfter new-link node)\n        (gdom/removeNode node)\n        ))))\n\n;; from https://github.com/clojure/clojurescript/blob/master/src/main/cljs/clojure/browser/repl.cljs\n;; I don't want to pull in all its other dependencies just for this function\n(defn get-ua-product []\n  (cond\n    product/SAFARI :safari\n    product/CHROME :chrome\n    product/FIREFOX :firefox\n    product/IE :ie))\n\n(defn get-asset-root []\n  (let [loc (js/goog.Uri. js/document.location.href)\n        cbp (js/goog.Uri. js/CLOSURE_BASE_PATH)\n        s (.toString (.resolve loc cbp))]\n    ;; FIXME: stacktrace starts with file:/// but resolve returns file:/\n    ;; how does this look on windows?\n    (str/replace s #\"^file:/\" \"file:///\")\n    ))\n\n(defn repl-error [e]\n  (js/console.error \"repl/invoke error\" e)\n  (-> (env/repl-error e)\n      (assoc :ua-product (get-ua-product)\n             :asset-root (get-asset-root))))\n\n(defn repl-invoke [{:keys [id js]}]\n  (let [result (env/repl-call #(js/eval js) repl-error)]\n    (-> result\n        (assoc :id id)\n        (ws-msg))))\n\n(defn repl-require [{:keys [id sources reload-namespaces js-requires] :as msg}]\n  (let [sources-to-load\n        (->> sources\n             (remove (fn [{:keys [provides] :as src}]\n                       (and (src-is-loaded? src)\n                            (not (some reload-namespaces provides)))))\n             (into []))]\n\n    (load-sources\n      sources-to-load\n      (fn [sources]\n        (do-js-load sources)\n        (when (seq js-requires)\n          (do-js-requires js-requires))\n        (ws-msg {:type :repl/require-complete :id id})\n        ))))\n\n(defn repl-init [{:keys [repl-state id]}]\n  (reset! repl-ns-ref (get-in repl-state [:current :ns]))\n  (load-sources\n    ;; maybe need to load some missing files to init REPL\n    (->> (:repl-sources repl-state)\n         (remove src-is-loaded?)\n         (into []))\n    (fn [sources]\n      (do-js-load sources)\n      (ws-msg {:type :repl/init-complete :id id})\n      (devtools-msg \"REPL init successful\"))))\n\n(defn repl-set-ns [{:keys [id ns]}]\n  (reset! repl-ns-ref ns)\n  (ws-msg {:type :repl/set-ns-complete :id id :ns ns}))\n\n(def close-reason-ref (volatile! nil))\n\n;; FIXME: core.async-ify this\n(defn handle-message [{:keys [type] :as msg}]\n  ;; (js/console.log \"ws-msg\" msg)\n  (case type\n    :asset-watch\n    (handle-asset-watch msg)\n\n    :repl/invoke\n    (repl-invoke msg)\n\n    :repl/require\n    (repl-require msg)\n\n    :repl/set-ns\n    (repl-set-ns msg)\n\n    :repl/init\n    (repl-init msg)\n\n    :build-complete\n    (do (hud/hud-warnings msg)\n        (handle-build-complete msg))\n\n    :build-failure\n    (do (hud/load-end)\n        (hud/hud-error msg))\n\n    :build-init\n    (hud/hud-warnings msg)\n\n    :build-start\n    (do (hud/hud-hide)\n        (hud/load-start))\n\n    :pong\n    nil\n\n    :client/stale\n    (vreset! close-reason-ref \"Stale Client! You are not using the latest compilation output!\")\n\n    :client/no-worker\n    (vreset! close-reason-ref (str \"watch for build \\\"\" env/build-id \"\\\" not running\"))\n\n    ;; default\n    :ignored))\n\n(defn compile [text callback]\n  (xhr/send\n    (str \"http\" (when env/ssl \"s\") \"://\" env/repl-host \":\" env/repl-port \"/worker/compile/\" env/build-id \"/\" env/proc-id \"/browser\")\n    (fn [res]\n      (this-as ^goog req\n        (let [actions\n              (-> req\n                  (.getResponseText)\n                  (reader/read-string))]\n          (when callback\n            (callback actions)))))\n    \"POST\"\n    (pr-str {:input text})\n    #js {\"content-type\" \"application/edn; charset=utf-8\"}))\n\n(defn heartbeat! []\n  (when-let [s @socket-ref]\n    (.send s (pr-str {:type :ping :v (js/Date.now)}))\n    (js/setTimeout heartbeat! 30000)))\n\n(defn ws-connect []\n  (let [print-fn\n        cljs.core/*print-fn*\n\n        ws-url\n        (env/ws-url :browser)\n\n        socket\n        (js/WebSocket. ws-url)]\n\n    (vreset! socket-ref socket)\n\n    (set! (.-onmessage socket)\n      (fn [e]\n        #_(set-print-fn! (fn [& args]\n                           (ws-msg {:type :repl/out\n                                    :out (into [] args)})\n                           (apply print-fn args)))\n\n        (env/process-ws-msg e handle-message)\n        ))\n\n    (set! (.-onopen socket)\n      (fn [e]\n        (hud/connection-error-clear!)\n        (vreset! close-reason-ref nil)\n        ;; :module-format :js already patches provide\n        (when (= \"goog\" env/module-format)\n          ;; patch away the already declared exception\n          (set! (.-provide js/goog) js/goog.constructNamespace_))\n        (devtools-msg \"WebSocket connected!\")\n        ))\n\n    (set! (.-onclose socket)\n      (fn [e]\n        ;; not a big fan of reconnecting automatically since a disconnect\n        ;; may signal a change of config, safer to just reload the page\n        (devtools-msg \"WebSocket disconnected!\")\n        (hud/connection-error (or @close-reason-ref \"Connection closed!\"))\n        (vreset! socket-ref nil)\n        ))\n\n    (set! (.-onerror socket)\n      (fn [e]\n        (hud/connection-error \"Connection failed!\")\n        (devtools-msg \"websocket error\" e)))\n\n    (js/setTimeout heartbeat! 30000)\n    ))\n\n(when ^boolean env/enabled\n  ;; disconnect an already connected socket, happens if this file is reloaded\n  ;; pretty much only for me while working on this file\n  (when-let [s @socket-ref]\n    (devtools-msg \"connection reset!\")\n    (set! (.-onclose s) (fn [e]))\n    (.close s)\n    (vreset! socket-ref nil))\n\n  ;; for /browser-repl in case the page is reloaded\n  ;; otherwise the browser seems to still have the websocket open\n  ;; when doing the reload\n  (js/window.addEventListener \"beforeunload\"\n    (fn []\n      (when-let [s @socket-ref]\n        (.close s))))\n\n  (ws-connect))\n"]}