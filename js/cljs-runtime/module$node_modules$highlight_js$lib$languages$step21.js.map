{
"version":3,
"file":"module$node_modules$highlight_js$lib$languages$step21.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAwC,CAC1HD,CAAAC,QAAA,CAAiBC,QAAQ,CAACC,CAAD,CAAO,CAgB9B,MAAO,CACLC,QAAS,CAAC,KAAD,CAAQ,MAAR,CAAgB,KAAhB,CADJ,CAELC,iBAAkB,CAAA,CAFb,CAGLC,QAlBoBC,mBAef,CAILC,SAlBoBC,CACpBC,QAAS,oBADWD,CAcf,CAKLE,SAAU,CAhBOC,CACjBC,UAAW,MADMD,CAEjBE,MAAO,eAFUF,CAGjBG,UAAW,EAHMH,CAgBP,CAXOI,CACjBH,UAAW,MADMG,CAEjBF,MAAO,mBAFUE,CAGjBD,UAAW,EAHMC,CAWP,CAGRb,CAAAc,oBAHQ,CAIRd,CAAAe,qBAJQ,CAKRf,CAAAgB,QAAA,CAAa,UAAb,CAAyB,MAAzB,CALQ,CAMRhB,CAAAiB,cANQ,CAORjB,CAAAkB,QAAA,CAAalB,CAAAmB,iBAAb,CAAoC,CAACC,QAAS,IAAV,CAApC,CAPQ,CAQRpB,CAAAkB,QAAA,CAAalB,CAAAqB,kBAAb;AAAqC,CAACD,QAAS,IAAV,CAArC,CARQ,CASR,CACEV,UAAW,QADb,CAEEC,MAAO,GAFT,CAEcW,IAAK,GAFnB,CATQ,CAaR,CACEZ,UAAW,QADb,CAEEa,SAAU,CACR,CACEZ,MAAO,GADT,CACcW,IAAK,MADnB,CAEEF,QAAS,KAFX,CADQ,CAFZ,CAbQ,CALL,CAhBuB,CAD0F;",
"sources":["node_modules/highlight.js/lib/languages/step21.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_js$lib$languages$step21\"] = function(global,process,require,module,exports) {\nmodule.exports = function(hljs) {\n  var STEP21_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var STEP21_KEYWORDS = {\n    keyword: 'HEADER ENDSEC DATA'\n  };\n  var STEP21_START = {\n    className: 'meta',\n    begin: 'ISO-10303-21;',\n    relevance: 10\n  };\n  var STEP21_CLOSE = {\n    className: 'meta',\n    begin: 'END-ISO-10303-21;',\n    relevance: 10\n  };\n\n  return {\n    aliases: ['p21', 'step', 'stp'],\n    case_insensitive: true, // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.\n    lexemes: STEP21_IDENT_RE,\n    keywords: STEP21_KEYWORDS,\n    contains: [\n      STEP21_START,\n      STEP21_CLOSE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*\\\\*!', '\\\\*/'),\n      hljs.C_NUMBER_MODE,\n      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'string',\n        begin: \"'\", end: \"'\"\n      },\n      {\n        className: 'symbol',\n        variants: [\n          {\n            begin: '#', end: '\\\\d+',\n            illegal: '\\\\W'\n          }\n        ]\n      }\n    ]\n  };\n};\n};"],
"names":["shadow$provide","global","process","require","module","exports","module.exports","hljs","aliases","case_insensitive","lexemes","STEP21_IDENT_RE","keywords","STEP21_KEYWORDS","keyword","contains","STEP21_START","className","begin","relevance","STEP21_CLOSE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","C_NUMBER_MODE","inherit","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","end","variants"]
}
