{"version":3,"file":"day8.re_frame_10x.db.js","sources":["day8/re_frame_10x/db.cljs"],"mappings":"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","names":["selected-tab","day8.re_frame_10x.utils.localstorage.get.cljs$core$IFn$_invoke$arity$2","num-epochs","G__30305","mranderson047.re-frame.v0v10v2.re-frame.core/dispatch","G__30302","G__30318","app-db-paths","day8.re-frame-10x.db/init-db","debug?","low-level-trace","follows-events?","G__30311","G__30312","G__30319","json-ml-paths","G__30313","using-trace?","categories","G__30315","filter-items","G__30320","G__30308","filtered-view-trace","show-panel?","G__30306","ignored-events","G__30303","panel-width%","external-window?","id2","cljs.core/random-uuid","show-epoch-traces?","G__30314","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core/sorted-map","G__30304","id1","G__30317","G__30309","G__30322","G__30316"],"sourcesContent":["(ns day8.re-frame-10x.db\n  (:require [mranderson047.re-frame.v0v10v2.re-frame.core :as rf]\n            [day8.re-frame-10x.utils.localstorage :as localstorage]))\n\n(defn init-db [debug?]\n  (let [panel-width% (localstorage/get \"panel-width-ratio\" 0.35)\n        show-panel? (localstorage/get \"show-panel\" true)\n        selected-tab (localstorage/get \"selected-tab\" :event)\n        filter-items (localstorage/get \"filter-items\" [])\n        app-db-paths (into (sorted-map) (localstorage/get \"app-db-paths\" {}))\n        json-ml-paths (localstorage/get \"app-db-json-ml-expansions\" #{})\n        external-window? (localstorage/get \"external-window?\" false)\n        show-epoch-traces? (localstorage/get \"show-epoch-traces?\" true)\n        using-trace? (localstorage/get \"using-trace?\" true)\n        ignored-events (localstorage/get \"ignored-events\" {})\n        low-level-trace (localstorage/get \"low-level-trace\" {:reagent true :re-frame true})\n        filtered-view-trace (localstorage/get \"filtered-view-trace\" (let [id1 (random-uuid)\n                                                                          id2 (random-uuid)]\n                                                                      {id1 {:id id1 :ns-str \"re-com.box\" :ns 're-com.box :sort 0}\n                                                                       id2 {:id id2 :ns-str \"re-com.input-text\" :ns 're-com.input-text :sort 1}}))\n        num-epochs (localstorage/get \"retained-epochs\" 5)\n        follows-events? (localstorage/get \"app-db-follows-events?\" true)\n        categories (localstorage/get \"categories\" #{:event :sub/run :sub/create :sub/dispose})]\n    (when using-trace?\n      (rf/dispatch [:global/enable-tracing]))\n    (rf/dispatch [:settings/panel-width% panel-width%])\n    (rf/dispatch [:settings/show-panel? show-panel?])\n    (rf/dispatch [:settings/selected-tab selected-tab])\n    (rf/dispatch [:settings/set-ignored-events ignored-events])\n    (rf/dispatch [:settings/set-filtered-view-trace filtered-view-trace])\n    (rf/dispatch [:settings/set-low-level-trace low-level-trace])\n    (rf/dispatch [:settings/set-number-of-retained-epochs num-epochs])\n    (rf/dispatch [:settings/app-db-follows-events? follows-events?])\n    (rf/dispatch [:settings/debug? debug?])\n    (when external-window?\n      (rf/dispatch [:global/launch-external]))\n    (rf/dispatch [:traces/filter-items filter-items])\n    (rf/dispatch [:traces/set-categories categories])\n    (rf/dispatch [:trace-panel/update-show-epoch-traces? show-epoch-traces?])\n    (rf/dispatch [:app-db/paths app-db-paths])\n    (rf/dispatch [:app-db/set-json-ml-paths json-ml-paths])\n    (rf/dispatch [:global/add-unload-hook])\n    (rf/dispatch [:app-db/reagent-id])))\n"]}