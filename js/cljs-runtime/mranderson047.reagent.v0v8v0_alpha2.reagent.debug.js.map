{"version":3,"file":"mranderson047.reagent.v0v8v0_alpha2.reagent.debug.js","sources":["mranderson047/reagent/v0v8v0_alpha2/reagent/debug.cljs"],"mappings":";;AAGA,AAAaY,gEAAY,OAASC;AAElC,6DAAA,7DAAcX;AAEd,GAAA,OAASF;AAAT;AAAA,AAAA,AAASA,6DAAS,6CAAA,7CAACC;;AAEnB,GAAA,OAASgB;AAAT;AAAA,AAAA,AAASA,kEACP,qBAAA,JAAMN;SAEE,TADN,AAAM,AAAQA,AADhB;;mCAEeP;6ZAC6CA,dAAJC,/GAAZC,zRAAjCC,qHAAeC,qOAAuB,jWAAvC,gJAAA,mFAAA,lKAAOR,gSAAiCS,jWAD1C;;;IAAOL;;;;EAAAA;;oCAAAA;;;IAAAA;0BAAAA;;;;;;;;UAGP,VADN,AAAM,AAASO;;mCACFP;AAAP,iZACiDC,1YAA9CE,qHAAeC,5HAAhB,gJAAA,mFAAA,+DAAmCF,jOAA5BN,kSAAkCS,AAAD,4DAAWL;;;IAD9CA;;;;EAAAA;;oCAAAA;;;IAAAA;0BAAAA;;;;;;;;AAEbO;;;AAEJ,mEAAA,nEAAMK,8IAAgBN;AACpB,6DAAA,7DAAMR,AADR;;AAEE,iFAAA,jFAACC,sBAAOH;;AACR,CAACU,kCAAAA,oCAAAA;;AACD,YAAA,AAAAI,RAAMC,wBAAOf;AACX,iFAAA,jFAACG,sBAAOH,tBADV;;AAEE,6DAAA,7DAAME;;AACNa","names":["mranderson047.reagent.v0v8v0-alpha2.reagent.debug/warnings","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","mranderson047.reagent.v0v8v0-alpha2.reagent.debug/tracking","cljs.core/reset!","args","cljs.core/str","cljs.core/conj","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/update-in","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","f","o","mranderson047.reagent.v0v8v0-alpha2.reagent.debug/has-console","js/console","cljs.core/deref","warns","mranderson047.reagent.v0v8v0-alpha2.reagent.debug/track-warnings","mranderson047.reagent.v0v8v0-alpha2.reagent.debug/track-console"],"sourcesContent":["(ns mranderson047.reagent.v0v8v0-alpha2.reagent.debug\n  (:require-macros [mranderson047.reagent.v0v8v0-alpha2.reagent.debug]))\n\n(def ^:const has-console (exists? js/console))\n\n(def ^boolean tracking false)\n\n(defonce warnings (atom nil))\n\n(defonce track-console\n  (let [o #js{}]\n    (set! (.-warn o)\n          (fn [& args]\n            (swap! warnings update-in [:warn] conj (apply str args))))\n    (set! (.-error o)\n          (fn [& args]\n            (swap! warnings update-in [:error] conj (apply str args))))\n    o))\n\n(defn track-warnings [f]\n  (set! tracking true)\n  (reset! warnings nil)\n  (f)\n  (let [warns @warnings]\n    (reset! warnings nil)\n    (set! tracking false)\n    warns))\n"]}