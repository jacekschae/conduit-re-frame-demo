shadow$provide.module$node_modules$create_react_class$factory=function(q,x,f,t,O){var c=f("module$node_modules$object_assign$index"),E=f("module$node_modules$fbjs$lib$emptyObject"),p=f("module$node_modules$fbjs$lib$invariant"),fa=f("module$node_modules$fbjs$lib$warning");var ha={prop:"prop",context:"context",childContext:"child context"};t.exports=function(f,q,t){function x(c,e,p){for(var f in e)e.hasOwnProperty(f)&&fa("function"===typeof e[f],"%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.",
c.displayName||"ReactClass",ha[p],f)}function I(c,e){if(e){p("function"!==typeof e,"ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object.");p(!q(e),"ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");var f=c.prototype,E=f.__reactAutoBindPairs;e.hasOwnProperty("mixins")&&qa.mixins(c,e.mixins);for(var H in e)if(e.hasOwnProperty(H)&&"mixins"!==H){var t=e[H],x=f.hasOwnProperty(H),M=x,I=H,Q=da.hasOwnProperty(I)?
da[I]:null;aa.hasOwnProperty(I)&&p("OVERRIDE_BASE"===Q,"ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.",I);M&&p("DEFINE_MANY"===Q||"DEFINE_MANY_MERGED"===Q,"ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",I);if(qa.hasOwnProperty(H))qa[H](c,t);else M=da.hasOwnProperty(H),"function"!==typeof t||M||x||!1===e.autobind?
x?(x=da[H],p(M&&("DEFINE_MANY_MERGED"===x||"DEFINE_MANY"===x),"ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.",x,H),"DEFINE_MANY_MERGED"===x?f[H]=O(f[H],t):"DEFINE_MANY"===x&&(f[H]=pa(f[H],t))):(f[H]=t,"function"===typeof t&&e.displayName&&(f[H].displayName=e.displayName+"_"+H)):(E.push(H,t),f[H]=t)}}else f=typeof e,fa("object"===f&&null!==e,"%s: You're attempting to include a mixin that is either null or not an object. Check the mixins included by the component, as well as any mixins they include themselves. Expected object but got %s.",
c.displayName||"ReactClass",null===e?null:f)}function Q(c,e){p(c&&e&&"object"===typeof c&&"object"===typeof e,"mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.");for(var f in e)e.hasOwnProperty(f)&&(p(void 0===c[f],"mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.",f),c[f]=e[f]);return c}function O(c,
e){return function(){var f=c.apply(this,arguments),p=e.apply(this,arguments);if(null==f)return p;if(null==p)return f;var H={};Q(H,f);Q(H,p);return H}}function pa(c,e){return function(){c.apply(this,arguments);e.apply(this,arguments)}}function ta(c,e){var f=e.bind(c);f.__reactBoundContext=c;f.__reactBoundMethod=e;f.__reactBoundArguments=null;var p=c.constructor.displayName,H=f.bind;f.bind=function(t){for(var q=arguments.length,E=Array(1<q?q-1:0),x=1;x<q;x++)E[x-1]=arguments[x];if(t!==c&&null!==t)fa(!1,
"bind(): React component methods may only be bound to the component instance. See %s",p);else if(!E.length)return fa(!1,"bind(): You are binding a component method to the component. React does this for you automatically in a high-performance way, so you can safely remove this call. See %s",p),f;q=H.apply(f,arguments);q.__reactBoundContext=c;q.__reactBoundMethod=e;q.__reactBoundArguments=E;return q};return f}var ca=[],da={mixins:"DEFINE_MANY",statics:"DEFINE_MANY",propTypes:"DEFINE_MANY",contextTypes:"DEFINE_MANY",
childContextTypes:"DEFINE_MANY",getDefaultProps:"DEFINE_MANY_MERGED",getInitialState:"DEFINE_MANY_MERGED",getChildContext:"DEFINE_MANY_MERGED",render:"DEFINE_ONCE",componentWillMount:"DEFINE_MANY",componentDidMount:"DEFINE_MANY",componentWillReceiveProps:"DEFINE_MANY",shouldComponentUpdate:"DEFINE_ONCE",componentWillUpdate:"DEFINE_MANY",componentDidUpdate:"DEFINE_MANY",componentWillUnmount:"DEFINE_MANY",UNSAFE_componentWillMount:"DEFINE_MANY",UNSAFE_componentWillReceiveProps:"DEFINE_MANY",UNSAFE_componentWillUpdate:"DEFINE_MANY",
updateComponent:"OVERRIDE_BASE"},ba={getDerivedStateFromProps:"DEFINE_MANY_MERGED"},qa={displayName:function(c,e){c.displayName=e},mixins:function(c,e){if(e)for(var f=0;f<e.length;f++)I(c,e[f])},childContextTypes:function(f,e){x(f,e,"childContext");f.childContextTypes=c({},f.childContextTypes,e)},contextTypes:function(f,e){x(f,e,"context");f.contextTypes=c({},f.contextTypes,e)},getDefaultProps:function(c,e){c.getDefaultProps=c.getDefaultProps?O(c.getDefaultProps,e):e},propTypes:function(f,e){x(f,
e,"prop");f.propTypes=c({},f.propTypes,e)},statics:function(c,e){a:if(e)for(var f in e){var q=e[f];if(e.hasOwnProperty(f)){p(!(f in qa),'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.',f);if(f in c){e=ba.hasOwnProperty(f)?ba[f]:null;p("DEFINE_MANY_MERGED"===e,"ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.",
f);c[f]=O(c[f],q);break a}c[f]=q}}},autobind:function(){}},ua={componentDidMount:function(){this.__isMounted=!0}},la={componentWillUnmount:function(){this.__isMounted=!1}},aa={replaceState:function(c,e){this.updater.enqueueReplaceState(this,c,e)},isMounted:function(){fa(this.__didWarnIsMounted,"%s: isMounted is deprecated. Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.",this.constructor&&this.constructor.displayName||this.name||"Component");
this.__didWarnIsMounted=!0;return!!this.__isMounted}},ma=function(){};c(ma.prototype,f.prototype,aa);return function(c){var e=function(c,f,q){fa(this instanceof e,"Something is calling a React component directly. Use a factory or JSX instead. See: https://fb.me/react-legacyfactory");if(this.__reactAutoBindPairs.length)for(var x=this.__reactAutoBindPairs,I=0;I<x.length;I+=2)this[x[I]]=ta(this,x[I+1]);this.props=c;this.context=f;this.refs=E;this.updater=q||t;this.state=null;c=this.getInitialState?this.getInitialState():
null;void 0===c&&this.getInitialState._isMockFunction&&(c=null);p("object"===typeof c&&!Array.isArray(c),"%s.getInitialState(): must return an object or null",e.displayName||"ReactCompositeComponent");this.state=c};e.prototype=new ma;e.prototype.constructor=e;e.prototype.__reactAutoBindPairs=[];ca.forEach(I.bind(null,e));I(e,ua);I(e,c);I(e,la);e.getDefaultProps&&(e.defaultProps=e.getDefaultProps());e.getDefaultProps&&(e.getDefaultProps.isReactClassApproved={});e.prototype.getInitialState&&(e.prototype.getInitialState.isReactClassApproved=
{});p(e.prototype.render,"createClass(...): Class specification must implement a `render` method.");fa(!e.prototype.componentShouldUpdate,"%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.",c.displayName||"A component");fa(!e.prototype.componentWillRecieveProps,"%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",c.displayName||"A component");
fa(!e.prototype.UNSAFE_componentWillRecieveProps,"%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?",c.displayName||"A component");for(var f in da)e.prototype[f]||(e.prototype[f]=null);return e}}}
//# sourceMappingURL=module$node_modules$create_react_class$factory.js.map
