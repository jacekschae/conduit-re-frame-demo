{"version":3,"file":"ajax.xml_http_request.js","sources":["ajax/xml_http_request.cljs"],"mappings":"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","names":["ajax.xml-http-request/process-headers","this","goog.string/isEmptyOrWhitespace","header-line","k","v","uri","method","body","headers","timeout","with-credentials","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","p1__41564#","ajax.xml-http-request/ready-state","seq__41571","cljs.core/seq","chunk__41572","count__41573","i__41574","vec__41575","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5457__auto__","cljs.core/chunked-seq?","c__4319__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__41578","cljs.core/first","cljs.core/next","next","goog.object/set","js/global","xmlhttprequest","response-format","or__3922__auto__","js/window","current","key-value","goog.string/splitLimit","handler","cljs.core/*target*","G__41563","fexpr__41562","ajax.xml-http-request/xmlhttprequest","header-str","ajax.xml-http-request/append","header","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core/PROTOCOL_SENTINEL","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","e","cljs.core/name","response-type","js/require","p__41565","map__41567","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],"sourcesContent":["(ns ajax.xml-http-request\n  (:require [ajax.protocols :refer [AjaxImpl AjaxRequest\n                                    AjaxResponse Interceptor]]\n            goog.string))\n\n(defn ready-state [e]\n  ({0 :not-initialized\n    1 :connection-established\n    2 :request-received\n    3 :processing-request\n    4 :response-ready} (.-readyState (.-target e))))\n\n(defn append [current next]\n  (if current\n    (str current \", \" next)\n    next))\n\n(defn process-headers [header-str]\n  (if header-str\n    (reduce (fn [headers header-line]\n              (if (goog.string/isEmptyOrWhitespace header-line)\n                headers\n                (let [key-value (goog.string/splitLimit header-line \": \" 2)]\n                  (update headers (aget key-value 0) append (aget key-value 1)))))\n            {}\n            (.split header-str \"\\r\\n\"))\n    {}))\n\n(def xmlhttprequest\n  (if (= cljs.core/*target* \"nodejs\")\n    (let [xmlhttprequest (.-XMLHttpRequest (js/require \"xmlhttprequest\"))]\n      (goog.object/set js/global \"XMLHttpRequest\" xmlhttprequest)\n      xmlhttprequest)\n    (.-XMLHttpRequest js/window)))\n\n(extend-type xmlhttprequest\n  AjaxImpl\n  (-js-ajax-request\n    [this\n     {:keys [uri method body headers timeout with-credentials\n             response-format]\n      :or {with-credentials false\n           timeout 0}}\n     handler]\n    (set! (.-withCredentials this) with-credentials)\n    (set! (.-onreadystatechange this)\n          #(when (= :response-ready (ready-state %))\n             (handler this)))\n    (.open this method uri true)\n    (set! (.-timeout this) timeout)\n;;; IE8 needs timeout to be set between open and send\n;;; https://msdn.microsoft.com/en-us/library/cc304105(v=vs.85).aspx\n    (when-let [response-type (:type response-format)]\n      (set! (.-responseType this) (name response-type)))\n    (doseq [[k v] headers]\n      (.setRequestHeader this k v))\n    (.send this (or body \"\"))\n    this)\n  AjaxRequest\n  (-abort [this] (.abort this))\n  AjaxResponse\n  (-body [this] (.-response this))\n  (-status [this] (.-status this))\n  (-status-text [this] (.-statusText this))\n  (-get-all-headers [this]\n    (process-headers (.getAllResponseHeaders this)))\n  (-get-response-header [this header]\n    (.getResponseHeader this header))\n  (-was-aborted [this] (= 0 (.-readyState this))))\n"]}