{"version":3,"file":"cljs_time.coerce.js","sources":["cljs_time/coerce.cljs"],"mappings":"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","names":["obj","cljs-time.coerce/to-local-date","cljs-time.coerce/to-string","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","goog/date.Date","cljs.core/type","date-time","G__42575","dt","G__42573","js/Date","cljs-time.coerce/to-date-time","millis","local-date","cljs-time.coerce/from-long","cljs-time.core/to-utc-time-zone","and__3911__auto__","cljs.core/quot","cljs-time.coerce/to-long","local-date-time","cljs-time.coerce/from-string","string","_","goog/date.DateTime","x__4211__auto__","m__4212__auto__","cljs-time/coerce.to-date-time","goog/typeOf","cljs.core/missing-protocol","cljs-time.coerce/ICoerce","cljs-time.coerce/from-date","s","goog.object/set","G__42576","G__42577","G__42578","cljs.core/PROTOCOL_SENTINEL","G__42579","G__42580","G__42581","G__42582","G__42583","G__42584","goog/date.UtcDateTime","iter__4292__auto__","s__42563","cljs.core/LazySeq","temp__5457__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4290__auto__","size__4291__auto__","cljs.core/count","b__42565","cljs.core/chunk-buffer","i__42564","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__42562","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","f","cljs.core/vals","cljs-time.format/formatters","date","G__42571","G__42561","goog.date.UtcDateTime/fromTimestamp","cljs-time.coerce/to-epoch","G__42574","temp__5455__auto__","cljs-time.coerce/to-date","cljs-time.format/unparse","long","cljs-time.coerce/to-local-date-time","d","cljs.core/chunk-first","e42566","e42567","cljs_time.format.parse.cljs$core$IFn$_invoke$arity$2","js/Error","G__42572"],"sourcesContent":["(ns cljs-time.coerce\n  \"### Utilites to coerce goog.date DateTime instances to and from\n  various other types.\n\n  For example, to convert a goog.date DateTime to and from a js number:\n\n```clojure\n=> (to-long (date-time 1998 4 25))\n893462400000\n\n=> (from-long 893462400000)\n#<19980425T000000>\n```\"\n  (:refer-clojure :exclude [extend second])\n  (:require\n    [cljs-time.core :refer\n     [date-time to-utc-time-zone from-default-time-zone year month day\n      hour minute second milli]]\n    [cljs-time.format :as time-fmt])\n  (:import [goog.date UtcDateTime]))\n\n(defprotocol ICoerce\n  (to-date-time [obj] \"Convert `obj` to a goog.date.DateTime instance.\"))\n\n(defn from-long\n  \"Returns a DateTime instance in the UTC time zone corresponding to the given\n  number of milliseconds after the Unix epoch.\"\n  [millis]\n  (some-> millis UtcDateTime.fromTimestamp))\n\n(defn from-string\n  \"Returns DateTime instance from string using formatters in cljs-time.format,\n  returning first which parses\"\n  [s]\n  (when s\n    (first\n     (for [f (vals time-fmt/formatters)\n           :let [d (try (time-fmt/parse f s) (catch js/Error _))]\n           :when d] d))))\n\n(defn from-date\n  \"Returns a DateTime instance in the UTC time zone corresponding to the given\n  js Date object.\"\n  [date]\n  (some-> date .getTime from-long))\n\n(defn to-long\n  \"Convert `obj` to the number of milliseconds after the Unix epoch.\"\n  [obj]\n  (some-> obj to-date-time .getTime))\n\n(defn to-epoch\n  \"Convert `obj` to Unix epoch.\"\n  [obj]\n  (let [millis (to-long obj)]\n    (and millis (quot millis 1000))))\n\n(defn to-date\n  \"Convert `obj` to a JavaScript Date instance.\"\n  [obj]\n  (some-> obj to-date-time .getTime js/Date.))\n\n(defn to-string\n  \"Returns a string representation of obj in UTC time-zone\n  using \\\"yyyy-MM-dd'T'HH:mm:ss.SSSZZ\\\" date-time representation.\"\n  [obj]\n  (some->> obj\n           to-date-time\n           (time-fmt/unparse (:date-time time-fmt/formatters))))\n\n(defn to-local-date\n  \"Convert `obj` to a goog.date.Date instance\"\n  [obj]\n  (when obj\n    (if (= goog.date.Date (type obj))\n      obj\n      (if-let [dt (to-date-time obj)]\n        (goog.date.Date. (.getYear dt) (.getMonth dt) (.getDate dt))))))\n\n(defn to-local-date-time\n  \"Convert `obj` to a goog.date.DateTime instance\"\n  [obj]\n  (when obj\n    (if-let [dt (to-date-time obj)]\n      (doto (goog.date.DateTime. (.getYear dt) (.getMonth dt) (.getDate dt))\n        (.setHours (.getHours dt))\n        (.setMinutes (.getMinutes dt))\n        (.setSeconds (.getSeconds dt))\n        (.setMilliseconds (.getMilliseconds dt))))))\n\n(extend-protocol ICoerce\n  nil\n  (to-date-time [_]\n    nil)\n\n  js/Date\n  (to-date-time [date]\n    (from-date date))\n\n  goog.date.Date\n  (to-date-time [local-date]\n    (when local-date\n      (to-utc-time-zone local-date)))\n\n  goog.date.DateTime\n  (to-date-time [local-date-time]\n    (when local-date-time\n      (to-utc-time-zone local-date-time)))\n\n  goog.date.UtcDateTime\n  (to-date-time [date-time]\n    date-time)\n\n  number\n  (to-date-time [long]\n    (from-long long))\n\n  string\n  (to-date-time [string]\n    (from-string string)))\n"]}