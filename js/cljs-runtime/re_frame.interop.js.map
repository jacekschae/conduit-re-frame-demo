{"version":3,"file":"re_frame.interop.js","sources":["re_frame/interop.cljs"],"mappings":";;;;;AAKA,AAAKoC,6BAAUC;AAEf,+BAAA,AAAArC,6CAAAC,gCAAA,5GAAKC;AAEL,AAAKgC,gCAAaC;AAMlB;;;AAAcrB,wCAA4CC;AAE1D,yBAAA,zBAAMgB,0DAAO3B;AAAb,AACE,OAACoC,gDAAkBpC;;AAErB,gCAAA,hCAAMD,wEAAQC;AAAd,AACE,GAAA,EAAA,MAAA,LAAwCA;AAAxC,GAAA,EAAA,WAAA,CAAAG,gCAAA,AAAwCH;AAAxC;;AAAA,GAAA,EAAA,AAAwCA;AAAxC,OAAAI,kCAAYS,4BAA4Bb;;AAAxC;;;;AAAA,OAAAI,kCAAYS,4BAA4Bb;;;AAE1C,gCAAA,hCAAM4B,wEAAQ5B;AACZ,GAAA,EAAA,MAAA,LAAmBA,NADrB;AACE,GAAA,EAAA,CAAA,wCAAA,cAAA,CAAAG,gCAAA,vFAAmBH,uFAAAA;AAAnB;;AAAA,GAAA,EAAA,AAAmBA;AAAnB,OAAAI,kCAAYC,iBAAOL;;AAAnB;;;;AAAA,OAAAI,kCAAYC,iBAAOL;;;AAGrB,iCAAA,jCAAMC,0EAAeC;AAArB,AACE,OAACoB,4BAA4BpB;;AAE/B,wCAAA,xCAAMiC,wFAAiBpB,QAAQb;AAC7B,OAACY,mCAA8BC,QAAQb,lDADzC;;AAGA,iCAAA,jCAAMc,0EAAUD;AAAhB,AACC,OAACW,4BAAuBX;;AAEzB,qCAAA,rCAAME,kFAAcf,EAAEgB;AAAtB,AACE,OAACoB,WAAcpC,EAAEgB;;AAEnB,uBAAA,vBAAMX;AAAN,AACE,GAAI,EACC,OAASY,iCACT,OAASC;AACZ,OAACA;;AACD,OAACC;;;AAEL;;;;8BAAA,9BAAMb,oEAGHI;AAHH,AAIE,GAAM,EAAA,EAAA,iBAAA,QAAA,EAAA,EAAA,WAAA,CAAAT,gCAAA,8CAAA,KAAA,OAAA,lIAAyCS,wEAAAA;AAA/C,AACE,oDAAK,iBAAAW,cAAOE;IAAPD,cAAiBZ;AAAjB,AAAA,oBAAA,CAAAW,4CAAAA,8DAAAC,eAAAD,0CAAAC,7EACEa,yDAAAA;AADF;;AAAA,oBAAA,CAAAd,4CAAAA,gEAAAC,eAAAD,4CAAAC,jFAEEU,2DAAAA;AAFF;;2GAGEzB,4DAAAA,vKAHF,oBAAA,CAAAc,4CAAAA,iEAAAC,eAAAD,6CAAAC;AAAA;;2GAIElB,yDAAAA,pKAJF,oBAAA,CAAAiB,4CAAAA,8DAAAC,eAAAD,0CAAAC;AAAA;;AAAA;;;;;kDAMA,AAACK,eAAKjB;;AAPb","names":["cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs/core.PersistentQueue.EMPTY","re-frame.interop/empty-queue","re-frame.interop/ratom?","x","re-frame.interop/make-reaction","f","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","cljs.core/IDeref","reagent.ratom/Track","re-frame.interop/now","re-frame.interop/reagent-id","reagent.ratom/Reaction","re-frame.interop/debug-enabled?","js/goog.DEBUG","reactive-val","reagent.ratom/IReactiveAtom","reagent.ratom/add-on-dispose!","a-ratom","re-frame.interop/dispose!","re-frame.interop/set-timeout!","ms","js/performance","js/performance.now","js/Date.now","reagent.ratom/make-reaction","pred__38062","expr__38063","cljs.core/instance?","reagent.ratom/dispose!","re-frame.interop/ratom","re-frame.interop/deref?","cljs.core/hash","re-frame.interop/after-render","reagent.core/after-render","re-frame.interop/next-tick","goog/async.nextTick","reagent.ratom/RCursor","re-frame.interop/add-on-dispose!","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","reagent.ratom/RAtom","js/setTimeout"],"sourcesContent":["(ns re-frame.interop\n  (:require [goog.async.nextTick]\n            [reagent.core]\n            [reagent.ratom]))\n\n(def next-tick goog.async.nextTick)\n\n(def empty-queue #queue [])\n\n(def after-render reagent.core/after-render)\n\n;; Make sure the Google Closure compiler sees this as a boolean constant,\n;; otherwise Dead Code Elimination won't happen in `:advanced` builds.\n;; Type hints have been liberally sprinkled.\n;; https://developers.google.com/closure/compiler/docs/js-for-compiler\n(def ^boolean debug-enabled? \"@define {boolean}\" ^boolean js/goog.DEBUG)\n\n(defn ratom [x]\n  (reagent.core/atom x))\n\n(defn ratom? [x]\n  (satisfies? reagent.ratom/IReactiveAtom x))\n\n(defn deref? [x]\n  (satisfies? IDeref x))\n\n\n(defn make-reaction [f]\n  (reagent.ratom/make-reaction f))\n\n(defn add-on-dispose! [a-ratom f]\n  (reagent.ratom/add-on-dispose! a-ratom f))\n\n(defn dispose! [a-ratom]\n\t(reagent.ratom/dispose! a-ratom))\n\n(defn set-timeout! [f ms]\n  (js/setTimeout f ms))\n\n(defn now []\n  (if (and\n       (exists? js/performance)\n       (exists? js/performance.now))\n    (js/performance.now)\n    (js/Date.now)))\n\n(defn reagent-id\n  \"Produces an id for reactive Reagent values\n  e.g. reactions, ratoms, cursors.\"\n  [reactive-val]\n  (when (implements? reagent.ratom/IReactiveAtom reactive-val)\n    (str (condp instance? reactive-val\n           reagent.ratom/RAtom \"ra\"\n           reagent.ratom/RCursor \"rc\"\n           reagent.ratom/Reaction \"rx\"\n           reagent.ratom/Track \"tr\"\n           \"other\")\n         (hash reactive-val))))\n"]}