{"version":3,"file":"day8.re_frame_10x.view.components.js","sources":["day8/re_frame_10x/view/components.cljs"],"mappings":"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","names":["child","clojure.string.join.cljs$core$IFn$_invoke$arity$2","p__28135","map__28136","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","class","clojure.string.split.cljs$core$IFn$_invoke$arity$2","css-string","day8.re-frame-10x.view.components/string->css","day8.re-frame-10x.view.components/tag","label","and__3911__auto__","cljs.core/deref","expanded?","previous-config__28086__auto__","devtools.prefs/get-prefs","prefs__28087__auto__","devtools.prefs/set-prefs!","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","js/Error","day8.re-frame-10x.view.components/effective-cljs-devtools-prefs","jsonml","path","day8.re-frame-10x.view.components/data-structure","cljs.core/boolean?","data","scroll?","should-scroll","day8.re-frame-10x.view.components/customized-cljs-devtools-prefs","val","_","day8.re-frame-10x.view.components/scroll!","node","p1__28106#","on-change","i","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1","day8.re-frame-10x.view.components/jsonml->hiccup","G__28182","G__28183","el","tolerance","or__3922__auto__","title","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","acc","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","property","value","var_args","args__4502__auto__","len__4499__auto__","i__4500__auto__","argseq__4503__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.view.components/cljs-devtools-has-body","seq28167","self__4487__auto__","cljs.core/seq","args","day8.re-frame-10x.view.components/get-object","day8.re-frame-10x.utils.re-com/h-box","cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic","G__28175","G__28176","day8.re-frame-10x.utils.re-com/box","save","v","clojure.string/trim","mranderson047.reagent.v0v8v0_alpha2.reagent.core.atom.cljs$core$IFn$_invoke$arity$1","day8.re-frame-10x.view.components/cljs-devtools-body","seq28161","p1__28141#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","tagnames","cljs.core/reset!","day8.re-frame-10x.view.components/cljs-devtools-header","seq28157","day8.re-frame-10x.view.components/get-config","day8.re_frame_10x.view.components.cljs_devtools_has_body.cljs$core$IFn$_invoke$arity$variadic","day8.re-frame-10x.utils.re-com/v-box","G__28197","mranderson047.re-frame.v0v10v2.re-frame.core/dispatch","day8.re-frame-10x.view.components/simple-render","p__28213","vec__28216","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq28207","G__28208","cljs.core/first","cljs.core/next","G__28209","self__4486__auto__","day8.re_frame_10x.view.components.cljs_devtools_header.cljs$core$IFn$_invoke$arity$variadic","G__28173","mranderson047.re-frame.v0v10v2.re-frame.core/subscribe","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","day8.re-frame-10x.view.components/make-devtools-api-call","devtools.formatters.core/body-api-call","G__28194","day8.re-frame-10x.view.components/scrolled-to-end?","p__28110","map__28111","day8.re-frame-10x.view.components/search-input","placeholder","on-save","on-stop","tag-name","seq28150","G__28151","api-fn","p__28132","map__28133","day8.re-frame-10x.view.components/autoscroll-list","day8.re-frame-10x.view.components/subscription-render","day8.re-frame-10x.view.components/highlight","mranderson047.reagent.v0v8v0_alpha2.reagent.core.adapt_react_class.cljs$core$IFn$_invoke$arity$1","js/Highlight","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","attributes","G__28120","p1__28107#","G__28174","dom-node","cljs.core/count","children","start","end","time","G__28177","G__28178","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","day8.re-frame-10x.view.components/default-cljs-devtools-prefs","vec__28179","seq__28180","first__28181","cljs.core/clj->js","goog.fx.dom/Scroll","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__28142","vec__28143","day8.re-frame-10x.view.components/reset-wrapping","day8.re_frame_10x.view.components.cljs_devtools_body.cljs$core$IFn$_invoke$arity$variadic","devtools.prefs/default-config","devtools.formatters.core/has-body-api-call","day8.re-frame-10x.view.components/subtree","devtools.formatters.core/header-api-call","cljs.core/contains?","cljs.core.into.cljs$core$IFn$_invoke$arity$3","mranderson047.reagent.v0v8v0-alpha2.reagent.core/create-class","clojure.string/replace"],"sourcesContent":["(ns day8.re-frame-10x.view.components\n  (:require [clojure.string :as str]\n            [goog.fx.dom :as fx]\n            [mranderson047.re-frame.v0v10v2.re-frame.core :as rf]\n            [clojure.string :as str]\n            [day8.re-frame-10x.utils.re-com :as rc]\n            [mranderson047.reagent.v0v8v0-alpha2.reagent.core :as r]\n            [devtools.prefs]\n            [devtools.formatters.core]\n            [cljsjs.react-highlight]\n            [cljsjs.highlight.langs.clojure])\n  (:require-macros [day8.re-frame-10x.utils.macros :refer [with-cljs-devtools-prefs]]))\n\n(defn search-input [{:keys [title placeholder on-save on-change on-stop]}]\n  (let [val  (r/atom title)\n        save #(let [v (-> @val str str/trim)]\n                (when (pos? (count v))\n                  (on-save v)))]\n    (fn []\n      [:input {:type        \"text\"\n               :value       @val\n               :auto-focus  true\n               :placeholder placeholder\n               :size        (if (> 20 (count (str @val)))\n                              25\n                              (count (str @val)))\n               :on-change   #(do (reset! val (-> % .-target .-value))\n                                 (on-change %))\n               :on-key-down #(case (.-which %)\n                               13 (do\n                                    (save)\n                                    (reset! val \"\"))\n                               nil)}])))\n\n(defn scroll! [el start end time]\n  (.play (fx/Scroll. el (clj->js start) (clj->js end) time)))\n\n(defn scrolled-to-end? [el tolerance]\n  ;; at-end?: element.scrollHeight - element.scrollTop === element.clientHeight\n  (> tolerance (- (.-scrollHeight el) (.-scrollTop el) (.-clientHeight el))))\n\n(defn autoscroll-list [{:keys [class scroll?]} child]\n  \"Reagent component that enables scrolling for the elements of its child dom-node.\n   Scrolling is only enabled if the list is scrolled to the end.\n   Scrolling can be set as option for debugging purposes.\n   Thanks to Martin Klepsch! Original code can be found here:\n       https://gist.github.com/martinklepsch/440e6fd96714fac8c66d892e0be2aaa0\"\n  (let [node          (r/atom nil)\n        should-scroll (r/atom true)]\n    (r/create-class\n      {:display-name \"autoscroll-list\"\n       :component-did-mount\n                     (fn [_]\n                       (scroll! @node [0 (.-scrollTop @node)] [0 (.-scrollHeight @node)] 0))\n       :component-will-update\n                     (fn [_]\n                       (reset! should-scroll (scrolled-to-end? @node 100)))\n       :component-did-update\n                     (fn [_]\n                       (when (and scroll? @should-scroll)\n                         (scroll! @node [0 (.-scrollTop @node)] [0 (.-scrollHeight @node)] 500)))\n       :reagent-render\n                     (fn [{:keys [class]} child]\n                       [:div {:class class :ref (fn [dom-node]\n                                                  (reset! node dom-node))}\n                        child])})))\n\n;; Data browser\n\n(defn string->css [css-string]\n  \"This function converts jsonml css-strings to valid css maps for hiccup.\n  Example: 'margin-left:0px;min-height:14px;' converts to\n           {:margin-left '0px', :min-height '14px'}\"\n\n  (->> (str/split css-string #\";\")\n       (map #(str/split % #\":\"))\n       (reduce (fn [acc [property value]]\n                 (assoc acc (keyword property) value)) {})))\n\n(declare jsonml->hiccup)\n\n(def default-cljs-devtools-prefs @devtools.prefs/default-config)\n\n(defn reset-wrapping [css-string]\n  (str/replace css-string #\"white-space:nowrap;\" \"\"))\n\n(def customized-cljs-devtools-prefs\n  {; Override some cljs-devtools default styles.\n\n   ; The goal here is to make default styles more flexible and wrap at the edge of our panel (we don't want horizontal\n   ; scrolling). Technically we want to remove all 'white-space:no-wrap'.\n   ; See https://github.com/binaryage/cljs-devtools/blob/master/src/lib/devtools/defaults.cljs\n   ;; Commented out as this causes some other issues too.\n   ;:header-style (reset-wrapping (:header-style default-cljs-devtools-prefs))\n   ;:expandable-style (reset-wrapping (:expandable-style default-cljs-devtools-prefs))\n   ;:item-style (reset-wrapping (:item-style default-cljs-devtools-prefs))\n\n   ; Hide the index spans on the left hand of collections. Shows how many elements in a collection.\n   :none-style                     \"display: none\"\n   :index-tag                      [:span :none-style]\n   :min-expandable-sequable-count-for-well-known-types\n   3\n\n   ; Our JSON renderer does not have hierarchy depth limit,\n   ; See https://github.com/binaryage/cljs-devtools/blob/master/src/lib/devtools/formatters/budgeting.cljs\n   :initial-hierarchy-depth-budget false})\n\n(def effective-cljs-devtools-prefs (merge default-cljs-devtools-prefs customized-cljs-devtools-prefs))\n\n(defn make-devtools-api-call [api-fn & args]\n  (with-cljs-devtools-prefs effective-cljs-devtools-prefs\n    (apply api-fn args)))\n\n(defn cljs-devtools-header [& args]\n  (apply make-devtools-api-call devtools.formatters.core/header-api-call args))\n\n(defn cljs-devtools-body [& args]\n  (apply make-devtools-api-call devtools.formatters.core/body-api-call args))\n\n(defn cljs-devtools-has-body [& args]\n  (apply make-devtools-api-call devtools.formatters.core/has-body-api-call args))\n\n(defn get-object [jsonml]\n  (.-object (get jsonml 1)))\n\n(defn get-config [jsonml]\n  (.-config (get jsonml 1)))\n\n(defn data-structure [jsonml path]\n  (let [expanded? (rf/subscribe [:app-db/node-expanded? path])]\n    (fn [jsonml path]\n      [:span\n       {:class (str \"re-frame-10x--object\" (when @expanded? \" expanded\"))}\n       [:span {:class    \"toggle\"\n               :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n        [:button.expansion-button (if @expanded? \"\u25bc\" \"\u25b6\")]]\n       (if (and @expanded? (cljs-devtools-has-body (get-object jsonml) (get-config jsonml)))\n         (jsonml->hiccup\n           (cljs-devtools-body\n             (get-object jsonml)\n             (get-config jsonml))\n           (conj path :body))\n         (jsonml->hiccup\n           (cljs-devtools-header\n             (get-object jsonml)\n             (get-config jsonml))\n           (conj path :header)))])))\n\n(defn jsonml->hiccup\n  \"JSONML is the format used by Chrome's Custom Object Formatters.\n  The spec is at https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview.\n\n  JSONML is pretty much Hiccup over JSON. Chrome's implementation of this can\n  be found at https://cs.chromium.org/chromium/src/third_party/WebKit/Source/devtools/front_end/object_ui/CustomPreviewComponent.js\n  \"\n  [jsonml path]\n  (if (number? jsonml)\n    jsonml\n    (let [[tag-name attributes & children] jsonml\n          tagnames #{\"div\" \"span\" \"ol\" \"li\" \"table\" \"tr\" \"td\"}]\n      (cond\n        (contains? tagnames tag-name) (into\n                                        [(keyword tag-name) {:style (-> (js->clj attributes)\n                                                                        (get \"style\")\n                                                                        (string->css))}]\n                                        (map-indexed (fn [i child] (jsonml->hiccup child (conj path i))))\n                                        children)\n\n        (= tag-name \"object\") [data-structure jsonml path]\n        :else jsonml))))\n\n(defn subtree [data title path]\n  (let [expanded? (rf/subscribe [:app-db/node-expanded? path])]\n    (fn [data]\n      [rc/v-box\n       :children\n       [[rc/h-box\n         :align :center\n         :class (str/join \" \" [\"re-frame-10x--object\"\n                               (when @expanded? \"expanded\")])\n         :children\n         [[:span {:class    \"toggle\"\n                  :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n           [:button.expansion-button (if @expanded? \"\u25bc \" \"\u25b6 \")]]\n          (or title \"data\")]]\n        [rc/h-box\n         :children [[:div {:style {:margin-left 20}}\n                     (cond\n                       (and @expanded?\n                            (or (string? data)\n                                (number? data)\n                                (boolean? data)\n                                (nil? data))) [:div {:style {:margin \"10px 0\"}} (prn-str data)]\n                       @expanded? (jsonml->hiccup (cljs-devtools-header data) (conj path 0)))]]]]])))\n\n(defn subscription-render [data title path]\n  (let [expanded? (r/atom true) #_(rf/subscribe [:app-db/node-expanded? path])]\n    (fn [data]\n      [:div\n       {:class (str/join \" \" [\"re-frame-10x--object\"\n                              (when @expanded? \"expanded\")])}\n       #_[:span {:class    \"toggle\"\n                 :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n          [:button.expansion-button (if @expanded? \"\u25bc \" \"\u25b6 \")]]\n       (or title \"data\")\n       [:div {:style {:margin-left 20}}\n        (cond\n          (and @expanded?\n               (or (string? data)\n                   (number? data)\n                   (boolean? data)\n                   (nil? data))) [:div {:style {:margin \"10px 0\"}} (prn-str data)]\n          @expanded? (jsonml->hiccup (cljs-devtools-header data) (conj path 0)))]])))\n\n(defn simple-render [data path & [class]]\n  (let [expanded? (r/atom true) #_(rf/subscribe [:app-db/node-expanded? path])]\n    (fn [data]\n      [:div\n       {:class (str/join \" \" [\"re-frame-10x--object\"\n                              (when @expanded? \"expanded\")\n                              class])}\n       #_[:span {:class    \"toggle\"\n                 :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n          [:button.expansion-button (if @expanded? \"\u25bc \" \"\u25b6 \")]]\n       [:div #_{:style {:margin-left 20}}\n        (cond\n          (and @expanded?\n               (or (string? data)\n                   (number? data)\n                   (boolean? data)\n                   (nil? data))) [:div {:style {:margin \"10px 0\"}} (prn-str data)]\n          @expanded? (jsonml->hiccup (cljs-devtools-header data) (conj path 0)))]])))\n\n(defn tag [class label]\n  [rc/box\n   :class (str \"rft-tag noselect \" class)\n   :child [:span {:style {:margin \"auto\"}} label]])\n\n(def highlight (r/adapt-react-class js/Highlight))\n"]}