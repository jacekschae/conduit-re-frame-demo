{
"version":3,
"file":"module$node_modules$highlight_js$lib$languages$smalltalk.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAwC,CAC7HD,CAAAC,QAAA,CAAiBC,QAAQ,CAACC,CAAD,CAAO,CAE9B,IAAIC,EAAO,CACTC,UAAW,QADF,CAETC,MAAO,SAFE,CAAX,CAIIC,EAAS,CACXF,UAAW,QADA,CAEXC,MAAO,GAAPA,CAAaH,CAAAK,oBAFF,CAIb,OAAO,CACLC,QAAS,CAAC,IAAD,CADJ,CAELC,SAAU,uCAFL,CAGLC,SAAU,CACRR,CAAAS,QAAA,CAAa,GAAb,CAAkB,GAAlB,CADQ,CAERT,CAAAU,iBAFQ,CAGR,CACER,UAAW,MADb,CAEEC,MAAO,uBAFT,CAGEQ,UAAW,CAHb,CAHQ,CAQR,CACER,MAAO,qBADT,CAEEQ,UAAW,CAFb,CARQ,CAYRX,CAAAY,cAZQ,CAaRR,CAbQ,CAcRH,CAdQ,CAeR,CAIEE,MAAO,2DAJT;AAKEU,YAAa,CAAA,CALf,CAKqBC,IAAK,IAL1B,CAMEC,QAAS,IANX,CAOEP,SAAU,CAAC,CAACL,MAAO,8BAAR,CAAD,CAPZ,CAfQ,CAwBR,CACEA,MAAO,QADT,CACmBW,IAAK,KADxB,CAEEN,SAAU,CACRR,CAAAU,iBADQ,CAERT,CAFQ,CAGRD,CAAAY,cAHQ,CAIRR,CAJQ,CAFZ,CAxBQ,CAHL,CAVuB,CAD6F;",
"sources":["node_modules/highlight.js/lib/languages/smalltalk.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_js$lib$languages$smalltalk\"] = function(global,process,require,module,exports) {\nmodule.exports = function(hljs) {\n  var VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  var CHAR = {\n    className: 'string',\n    begin: '\\\\$.{1}'\n  };\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    aliases: ['st'],\n    keywords: 'self super nil true false thisContext', // only 6\n    contains: [\n      hljs.COMMENT('\"', '\"'),\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n        relevance: 0\n      },\n      {\n        begin: VAR_IDENT_RE + ':',\n        relevance: 0\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOL,\n      CHAR,\n      {\n        // This looks more complicated than needed to avoid combinatorial\n        // explosion under V8. It effectively means `| var1 var2 ... |` with\n        // whitespace adjacent to `|` being optional.\n        begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n        returnBegin: true, end: /\\|/,\n        illegal: /\\S/,\n        contains: [{begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE}]\n      },\n      {\n        begin: '\\\\#\\\\(', end: '\\\\)',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          CHAR,\n          hljs.C_NUMBER_MODE,\n          SYMBOL\n        ]\n      }\n    ]\n  };\n};\n};"],
"names":["shadow$provide","global","process","require","module","exports","module.exports","hljs","CHAR","className","begin","SYMBOL","UNDERSCORE_IDENT_RE","aliases","keywords","contains","COMMENT","APOS_STRING_MODE","relevance","C_NUMBER_MODE","returnBegin","end","illegal"]
}
