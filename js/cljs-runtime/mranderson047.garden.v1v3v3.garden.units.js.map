{"version":3,"file":"mranderson047.garden.v1v3v3.garden.units.js","sources":["mranderson047/garden/v1v3v3/garden/units.cljc"],"mappings":"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","names":["cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","ud","mranderson047$garden$v1v3v3$garden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2","x","y","more","mranderson047.garden.v1v3v3.garden.units/convertable?","mranderson047.garden.v1v3v3.garden.units/make-unit-fn","mranderson047.garden.v1v3v3.garden.units/pt?","mranderson047.garden.v1v3v3.garden.units/make-unit-predicate","mranderson047.garden.v1v3v3.garden.units/pt+","mranderson047.garden.v1v3v3.garden.units/make-unit-adder","mranderson047.garden.v1v3v3.garden.units/pt-","mranderson047.garden.v1v3v3.garden.units/make-unit-subtractor","mranderson047.garden.v1v3v3.garden.units/pt*","mranderson047.garden.v1v3v3.garden.units/make-unit-multiplier","mranderson047.garden.v1v3v3.garden.units/pt-div","mranderson047.garden.v1v3v3.garden.units/make-unit-divider","mranderson047.garden.v1v3v3.garden.units/pt","mranderson047.garden.v1v3v3.garden.units/conversions","map__25683","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__25684","m1","u","m2","cljs.core/type","unit","v1","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","left","right","m","mranderson047.garden.v1v3v3.garden.units/unit-re","cljs.core/contains?","mranderson047.garden.v1v3v3.garden.units/frequency-units","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","and__3911__auto__","mranderson047.garden.v1v3v3.garden.units/unit?","map__25658","map__25659","mranderson047.garden.v1v3v3.garden.types/CSSUnit","mranderson047.garden.v1v3v3.garden.units/angle?","mranderson047.garden.v1v3v3.garden.units/vw?","mranderson047.garden.v1v3v3.garden.units/vw+","mranderson047.garden.v1v3v3.garden.units/vw-","mranderson047.garden.v1v3v3.garden.units/vw*","mranderson047.garden.v1v3v3.garden.units/vw-div","mranderson047.garden.v1v3v3.garden.units/vw","map__25700","map__25701","mranderson047.garden.v1v3v3.garden.units/Hz?","mranderson047.garden.v1v3v3.garden.units/Hz+","mranderson047.garden.v1v3v3.garden.units/Hz-","mranderson047.garden.v1v3v3.garden.units/Hz*","mranderson047.garden.v1v3v3.garden.units/Hz-div","mranderson047.garden.v1v3v3.garden.units/Hz","u-","mranderson047$garden$v1v3v3$garden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.units/em?","mranderson047.garden.v1v3v3.garden.units/em+","mranderson047.garden.v1v3v3.garden.units/em-","mranderson047.garden.v1v3v3.garden.units/em*","mranderson047.garden.v1v3v3.garden.units/em-div","mranderson047.garden.v1v3v3.garden.units/em","ex-data","mranderson047.garden.v1v3v3.garden.units/time-units","mranderson047.garden.v1v3v3.garden.units/deg?","mranderson047.garden.v1v3v3.garden.units/deg+","mranderson047.garden.v1v3v3.garden.units/deg-","mranderson047.garden.v1v3v3.garden.units/deg*","mranderson047.garden.v1v3v3.garden.units/deg-div","mranderson047.garden.v1v3v3.garden.units/deg","v2","G__25708","temp__5457__auto__","vec__25622","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","_","magnitude","cljs.core/re-matches","s","mranderson047.garden.v1v3v3.garden.units/rad?","mranderson047.garden.v1v3v3.garden.units/rad+","mranderson047.garden.v1v3v3.garden.units/rad-","mranderson047.garden.v1v3v3.garden.units/rad*","mranderson047.garden.v1v3v3.garden.units/rad-div","mranderson047.garden.v1v3v3.garden.units/rad","mranderson047.garden.v1v3v3.garden.units/resolution-units","mranderson047.garden.v1v3v3.garden.units/mm?","mranderson047.garden.v1v3v3.garden.units/mm+","mranderson047.garden.v1v3v3.garden.units/mm-","mranderson047.garden.v1v3v3.garden.units/mm*","mranderson047.garden.v1v3v3.garden.units/mm-div","mranderson047.garden.v1v3v3.garden.units/mm","mranderson047.garden.v1v3v3.garden.units/s?","mranderson047.garden.v1v3v3.garden.units/s+","mranderson047.garden.v1v3v3.garden.units/s-","mranderson047.garden.v1v3v3.garden.units/s*","mranderson047.garden.v1v3v3.garden.units/s-div","mranderson047.garden.v1v3v3.garden.units/s","cljs.core/every?","mranderson047.garden.v1v3v3.garden.units/ex?","mranderson047.garden.v1v3v3.garden.units/ex+","mranderson047.garden.v1v3v3.garden.units/ex-","mranderson047.garden.v1v3v3.garden.units/ex*","mranderson047.garden.v1v3v3.garden.units/ex-div","mranderson047.garden.v1v3v3.garden.units/ex","mranderson047.garden.v1v3v3.garden.units/read-unit","mranderson047.garden.v1v3v3.garden.units/grad?","mranderson047.garden.v1v3v3.garden.units/grad+","mranderson047.garden.v1v3v3.garden.units/grad-","mranderson047.garden.v1v3v3.garden.units/grad*","mranderson047.garden.v1v3v3.garden.units/grad-div","mranderson047.garden.v1v3v3.garden.units/grad","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.units/frequency?","mranderson047.garden.v1v3v3.garden.units/angular-units","G__25682","mranderson047.garden.v1v3v3.garden.util.format.cljs$core$IFn$_invoke$arity$variadic","cljs.core/name","G__25731","mranderson047.garden.v1v3v3.garden.units/length?","ex-message","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.units/vmax?","mranderson047.garden.v1v3v3.garden.units/vmax+","mranderson047.garden.v1v3v3.garden.units/vmax-","mranderson047.garden.v1v3v3.garden.units/vmax*","mranderson047.garden.v1v3v3.garden.units/vmax-div","mranderson047.garden.v1v3v3.garden.units/vmax","mranderson047.garden.v1v3v3.garden.units/turn?","mranderson047.garden.v1v3v3.garden.units/turn+","mranderson047.garden.v1v3v3.garden.units/turn-","mranderson047.garden.v1v3v3.garden.units/turn*","mranderson047.garden.v1v3v3.garden.units/turn-div","mranderson047.garden.v1v3v3.garden.units/turn","G__25724","mranderson047.garden.v1v3v3.garden.units/resolution?","mranderson047.garden.v1v3v3.garden.units/length-units","mranderson047.garden.v1v3v3.garden.units/vh?","mranderson047.garden.v1v3v3.garden.units/vh+","mranderson047.garden.v1v3v3.garden.units/vh-","mranderson047.garden.v1v3v3.garden.units/vh*","mranderson047.garden.v1v3v3.garden.units/vh-div","mranderson047.garden.v1v3v3.garden.units/vh","mranderson047.garden.v1v3v3.garden.units/ch?","mranderson047.garden.v1v3v3.garden.units/ch+","mranderson047.garden.v1v3v3.garden.units/ch-","mranderson047.garden.v1v3v3.garden.units/ch*","mranderson047.garden.v1v3v3.garden.units/ch-div","mranderson047.garden.v1v3v3.garden.units/ch","mranderson047.garden.v1v3v3.garden.units/in?","mranderson047.garden.v1v3v3.garden.units/in+","mranderson047.garden.v1v3v3.garden.units/in-","mranderson047.garden.v1v3v3.garden.units/in*","mranderson047.garden.v1v3v3.garden.units/in-div","mranderson047.garden.v1v3v3.garden.units/in","G__25688","mranderson047.garden.v1v3v3.garden.units/time?","mranderson047.garden.v1v3v3.garden.units/dpcm?","mranderson047.garden.v1v3v3.garden.units/dpcm+","mranderson047.garden.v1v3v3.garden.units/dpcm-","mranderson047.garden.v1v3v3.garden.units/dpcm*","mranderson047.garden.v1v3v3.garden.units/dpcm-div","mranderson047.garden.v1v3v3.garden.units/dpcm","mranderson047.garden.v1v3v3.garden.units/px?","mranderson047.garden.v1v3v3.garden.units/px+","mranderson047.garden.v1v3v3.garden.units/px-","mranderson047.garden.v1v3v3.garden.units/px*","mranderson047.garden.v1v3v3.garden.units/px-div","mranderson047.garden.v1v3v3.garden.units/px","u*","mranderson047$garden$v1v3v3$garden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.units/vmin?","mranderson047.garden.v1v3v3.garden.units/vmin+","mranderson047.garden.v1v3v3.garden.units/vmin-","mranderson047.garden.v1v3v3.garden.units/vmin*","mranderson047.garden.v1v3v3.garden.units/vmin-div","mranderson047.garden.v1v3v3.garden.units/vmin","cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2","cljs.core/first","mranderson047.garden.v1v3v3.garden.units/percent?","mranderson047.garden.v1v3v3.garden.units/percent+","mranderson047.garden.v1v3v3.garden.units/percent-","mranderson047.garden.v1v3v3.garden.units/percent*","mranderson047.garden.v1v3v3.garden.units/percent-div","mranderson047.garden.v1v3v3.garden.units/percent","map__25726","map__25727","mranderson047.garden.v1v3v3.garden.units/dpi?","mranderson047.garden.v1v3v3.garden.units/dpi+","mranderson047.garden.v1v3v3.garden.units/dpi-","mranderson047.garden.v1v3v3.garden.units/dpi*","mranderson047.garden.v1v3v3.garden.units/dpi-div","mranderson047.garden.v1v3v3.garden.units/dpi","mranderson047.garden.v1v3v3.garden.units/cm?","mranderson047.garden.v1v3v3.garden.units/cm+","mranderson047.garden.v1v3v3.garden.units/cm-","mranderson047.garden.v1v3v3.garden.units/cm*","mranderson047.garden.v1v3v3.garden.units/cm-div","mranderson047.garden.v1v3v3.garden.units/cm","mranderson047.garden.v1v3v3.garden.units/dppx?","mranderson047.garden.v1v3v3.garden.units/dppx+","mranderson047.garden.v1v3v3.garden.units/dppx-","mranderson047.garden.v1v3v3.garden.units/dppx*","mranderson047.garden.v1v3v3.garden.units/dppx-div","mranderson047.garden.v1v3v3.garden.units/dppx","mranderson047.garden.v1v3v3.garden.units/ms?","mranderson047.garden.v1v3v3.garden.units/ms+","mranderson047.garden.v1v3v3.garden.units/ms-","mranderson047.garden.v1v3v3.garden.units/ms*","mranderson047.garden.v1v3v3.garden.units/ms-div","mranderson047.garden.v1v3v3.garden.units/ms","mranderson047.garden.v1v3v3.garden.units/kHz?","mranderson047.garden.v1v3v3.garden.units/kHz+","mranderson047.garden.v1v3v3.garden.units/kHz-","mranderson047.garden.v1v3v3.garden.units/kHz*","mranderson047.garden.v1v3v3.garden.units/kHz-div","mranderson047.garden.v1v3v3.garden.units/kHz","mranderson047.garden.v1v3v3.garden.units/pc?","mranderson047.garden.v1v3v3.garden.units/pc+","mranderson047.garden.v1v3v3.garden.units/pc-","mranderson047.garden.v1v3v3.garden.units/pc*","mranderson047.garden.v1v3v3.garden.units/pc-div","mranderson047.garden.v1v3v3.garden.units/pc","p__25596","map__25600","mranderson047.garden.v1v3v3.garden.units/convert","G__25666","u+","mranderson047$garden$v1v3v3$garden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2","mranderson047.garden.v1v3v3.garden.units/rem?","mranderson047.garden.v1v3v3.garden.units/rem+","mranderson047.garden.v1v3v3.garden.units/rem-","mranderson047.garden.v1v3v3.garden.units/rem*","mranderson047.garden.v1v3v3.garden.units/rem-div","mranderson047.garden.v1v3v3.garden.units/rem","cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1"],"sourcesContent":["(ns mranderson047.garden.v1v3v3.garden.units\n  \"Functions and macros for working with CSS units.\"\n  (:refer-clojure :exclude [rem])\n  #?@(:clj\n     [(:require\n       [mranderson047.garden.v1v3v3.garden.types :as types]\n       [mranderson047.garden.v1v3v3.garden.util :as util])\n      (:import\n       [mranderson047.garden.v1v3v3.garden.types CSSUnit])])\n  #?@(:cljs\n      [(:require\n        [cljs.reader :refer [read-string]]\n        [mranderson047.garden.v1v3v3.garden.types :as types :refer [CSSUnit]]\n        [mranderson047.garden.v1v3v3.garden.util :as util])\n       (:require-macros\n        [mranderson047.garden.v1v3v3.garden.units :refer [defunit]])]))\n\n;;;; ## Unit families\n\n(def length-units\n  #{:in :cm :pc :mm :pt :px (keyword \"%\")})\n\n(def angular-units\n  #{:deg :grad :rad :turn})\n\n(def time-units\n  #{:s :ms})\n\n(def frequency-units\n  #{:Hz :kHz})\n\n(def resolution-units\n  #{:dpi :dpcm :dppx})\n\n;;;; ## Unit predicates\n\n(defn unit?\n  \"True if x is of type CSSUnit.\"\n  [x]\n  (instance? CSSUnit x))\n\n(defn length?\n  [x]\n  (and (unit? x)\n       (contains? length-units (:unit x))))\n\n(defn angle?\n  [x]\n  (and (unit? x)\n       (contains? angular-units (:unit x))))\n\n(defn time?\n  [x]\n  (and (unit? x)\n       (contains? time-units (:unit x))))\n\n(defn frequency?\n  [x]\n  (and (unit? x)\n       (contains? frequency-units (:unit x))))\n\n(defn resolution?\n  [x]\n  (and (unit? x)\n       (contains? resolution-units (:unit x))))\n\n;;;; ## Unit conversion\n\n(def ^{:private true\n       :doc \"Map associating CSS unit types to their conversion values.\"}\n  conversions\n  {;; Absolute units\n   :cm {:cm 1\n        :mm 10\n        :pc 2.36220473\n        :pt 28.3464567\n        :px 37.795275591}\n   :in {:cm 2.54\n        :in 1\n        :mm 25.4\n        :pc 6\n        :pt 72\n        :px 96}\n   :mm {:mm 1\n        :pt 2.83464567\n        :px 3.7795275591}\n   :pc {:mm 4.23333333\n        :pc 1\n        :pt 12\n        :px 16}\n   :pt {:pt 1\n        :px 1.3333333333}\n   :px {:px 1}\n   (keyword \"%\") {(keyword \"%\") 1}\n\n   ;; Relative untis\n   :em {:em 1}\n   :rem {:rem 1}\n\n   ;; Angular units\n   :deg {:deg 1\n         :grad 1.111111111\n         :rad 0.0174532925\n         :turn 0.002777778}\n   :grad {:grad 1\n          :rad 63.661977237\n          :turn 0.0025}\n   :rad {:rad 1\n         :turn 0.159154943}\n   :turn {:turn 1}\n\n   ;; Time units\n   :s {:ms 1000\n       :s 1}\n   :ms {:ms 1}\n\n   ;; Frequency units\n   :Hz {:Hz 1\n        :kHz 0.001}\n   :kHz {:kHz 1}})\n\n(defn- convertable?\n  \"True if unit is a key of convertable-units, false otherwise.\"\n  [unit]\n  (contains? conversions unit))\n\n(defn- convert\n  \"Convert a Unit with :unit left to a Unit with :unit right if possible.\"\n  [{m :magnitude left :unit} right]\n  (if (every? convertable? [left right])\n    (let [v1 (get-in conversions [left right])\n          v2 (get-in conversions [right left])]\n      (cond\n        v1\n        (CSSUnit. right (* v1 m))\n\n        v2\n        (CSSUnit. right (/ m v2))\n\n       ;; Both units are convertible but no conversion between them exists.\n       :else\n       (throw\n        (ex-info\n         (util/format \"Can't convert %s to %s\" (name left) (name right)) {}))))\n    ;; Display the inconvertible unit.\n    (let [x (first (drop-while convertable? [left right]))]\n      (throw (ex-info (str \"Inconvertible unit \" (name x)) {})))))\n\n;;;; ## Unit helpers\n\n(def ^{:doc \"Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.\"\n       :private true}\n  unit-re\n  #\"([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))\")\n\n(defn read-unit\n  \"Read a `CSSUnit` object from the string `s`.\"\n  [s]\n  (when-let [[_ magnitude unit] (re-matches unit-re s)]\n    (let [unit (keyword unit)\n          magnitude (if magnitude (read-string magnitude) 0)]\n      (CSSUnit. unit magnitude))))\n\n(defn make-unit-predicate\n  \"Creates a function for verifying the given unit type.\"\n  [unit]\n  (fn [x] (and (unit? x) (= (:unit x) unit))))\n\n(defn make-unit-fn\n  \"Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it.\"\n  [unit]\n  (fn [x]\n    (cond\n      (number? x)\n      (CSSUnit. unit x)\n\n      (unit? x)\n      (if (and (= (unit x) unit))\n        x\n        (convert x unit))\n\n      :else\n      (let [;; Does `.getName` even work in CLJS? -- @noprompt\n            ex-message (util/format \"Unable to convert from %s to %s\"\n                                    (.getName type)\n                                    (name unit))\n            ;; TODO: This needs to be populated with more helpful\n            ;; data.\n            ex-data {:given {:type type\n                             :unit unit}}]\n        (throw\n         (ex-info ex-message ex-data))))))\n\n(defn make-unit-adder\n  \"Create a addition function for adding Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u+\n      ([] (u 0))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (+ m1 m2))))\n      ([x y & more]\n         (reduce u+ (u+ x y) more)))))\n\n(defn make-unit-subtractor\n  \"Create a subtraction function for subtracting Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u-\n      ([x] (u (- x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (- m1 m2))))\n      ([x y & more]\n         (reduce u- (u- x y) more)))))\n\n(defn make-unit-multiplier\n  \"Create a multiplication function for multiplying Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u*\n      ([] (u 1))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (* m1 m2))))\n      ([x y & more]\n         (reduce u* (u* x y) more)))))\n\n(defn make-unit-divider\n  \"Create a division function for dividing Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn ud\n      ([x] (u (/ 1 x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (/ m1 m2))))\n      ([x y & more]\n         (reduce ud (ud x y) more)))))\n\n#?(:clj\n   (defmacro defunit\n     \"Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.\"\n     ([name]\n      `(defunit ~name ~name))\n     ([name unit]\n      (let [k (keyword unit)\n            append #(symbol (str name %))]\n        `(do\n           (def ~name (make-unit-fn ~k))\n           (def ~(append \\?) (make-unit-predicate ~k))\n           (def ~(append \\+) (make-unit-adder ~k))\n           (def ~(append \\-) (make-unit-subtractor ~k))\n           (def ~(append \\*) (make-unit-multiplier ~k))\n           (def ~(append \"-div\") (make-unit-divider ~k)))))))\n\n(comment\n  ;; This:\n  (defunit px)\n  ;; Is equivalent to:\n  (def px  (make-unit-fn :px))\n  (def px? (make-unit-predicate :px))\n  (def px+ (make-unit-adder :px))\n  (def px- (make-unit-subtractor :px))\n  (def px* (make-unit-multiplier :px))\n  (def px-div (make-unit-divider :px)))\n\n;; # Predefined units\n\n;; Absolute units\n\n(defunit cm)\n(defunit mm)\n(defunit in)\n(defunit px)\n(defunit pt)\n(defunit pc)\n(defunit percent \"%\")\n\n;; Font-relative units\n\n(defunit em)\n(defunit ex)\n(defunit ch)\n(defunit rem)\n\n;; Viewport-percentage lengths\n\n(defunit vw)\n(defunit vh)\n(defunit vmin)\n(defunit vmax)\n\n;; Angles\n\n(defunit deg)\n(defunit grad)\n(defunit rad)\n(defunit turn)\n\n;; Times\n\n(defunit s)\n(defunit ms)\n\n;; Frequencies\n\n(defunit Hz)\n(defunit kHz)\n\n;; Resolutions\n\n(defunit dpi)\n(defunit dpcm)\n(defunit dppx)\n"]}