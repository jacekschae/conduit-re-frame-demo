{"version":3,"file":"rewrite_clj.parser.js","sources":["rewrite_clj/parser.cljs"],"mappings":";;;;;AAOA;;;2BAAA,3BAAMA,8DAESQ;AAFf,AAGE,OAACO,mCAAaP;;AAEhB;;;+BAAA,/BAAMC,sEAESD;AACb,IAAML,4HAAW,mDAAA,nDAACI,pHAED,AAACI,ZALpB,0DAImB,AAACE,mDAAWC;AADZ,AAAa,OAACd,yBAAMQ;;yMAKjC,AAACP,eAAK,AAACC,gBAAMC,xOALjB,2BAII,CAACS,4DAAAA,mEAAAA,TAAgBT,+CAAAA,jMADnB,OAACa;;AAML;;;kCAAA,lCAAMV,4EAEHD;AACD,OAACL,yBAAM,CAACI,6EAAAA,gFAAAA,LAA4BC,4DAAAA,rPAHtC;;AAKA;;;oFAEGA,9CAFH,tCAAMK;AAGJ,OAACD,6BAAU,CAACL,6EAAAA,gFAAAA,LAA4BC,4DAAAA,zPAH1C","names":["rewrite-clj.parser/parse","cljs.core/meta","cljs.core/first","nodes","rewrite-clj.reader/indexing-push-back-reader","s","rewrite-clj.parser/parse-string","cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1","reader","rewrite-clj.parser/parse-all","rewrite-clj.parser/parse-string-all","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","rewrite-clj.node/forms-node","cljs.core.take_while.cljs$core$IFn$_invoke$arity$2","cljs.core/identity","rewrite-clj.parser.core/parse-next","cljs.core/with-meta"],"sourcesContent":["(ns rewrite-clj.parser\n  (:require [rewrite-clj.parser.core :as p]\n            [rewrite-clj.node :as node]\n            [rewrite-clj.reader :as r]))\n\n;; ## Parser Core\n\n(defn parse\n  \"Parse next form from the given reader.\"\n  [^not-native reader]\n  (p/parse-next reader))\n\n(defn parse-all\n  \"Parse all forms from the given reader.\"\n  [^not-native reader]\n  (let [nodes (->> (repeatedly #(parse reader))\n                   (take-while identity)\n                   (doall))]\n    (with-meta\n      (node/forms-node nodes)\n      (meta (first nodes)))))\n\n;; ## Specialized Parsers\n\n(defn parse-string\n  \"Parse first form in the given string.\"\n  [s]\n  (parse (r/indexing-push-back-reader s)))\n\n(defn parse-string-all\n  \"Parse all forms in the given string.\"\n  [s]\n  (parse-all (r/indexing-push-back-reader s)))\n\n\n"]}